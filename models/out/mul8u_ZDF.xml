<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>/* Feel free to cite and/or read details to the model using:
  STRNADEL Josef. Statistical Model Checking of Approximate Circuits: Challenges and Opportunities. In: Proceedings of the 2020 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE). Grenoble: IEEE Computer Society, 2020, pp. 1574-1577. ISBN 978-3-9819263-4-7. Available from: https://ieeexplore.ieee.org/document/9116207 and https://www.fit.vut.cz/research/publication/12055/
 */
double dif_count = 0;
double res_count = 0;

double out_sum_all_acc;
double out_sum_all_approx;
double out_sum_all_diff;
double out_sum_all_diff_squared;

double out_sum_relative;

int hamming_distance = 0;
double error_prob = 0.0;
double mean_abs_error = 0.0;
double mean_squared_error = 0.0;
double mean_relative_error = 0.0;
double worst_case_error = 0.0;
double worst_case_relative_error = 0.0;

double rnd;

broadcast chan change[1000];
int outcnt=0;

double bit_flips = 0;

const int NOPS = 9;
typedef int[0,NOPS-1] tOp;

const int MAX_INT = 65536;

const tOp OP_NOT = 0;
const tOp OP_DLY = 1;
const tOp OP_AND = 2;
const tOp OP_NAND = 3;
const tOp OP_OR = 4;
const tOp OP_NOR = 5;
const tOp OP_XOR = 6;
const tOp OP_XNOR = 7;
const tOp OP_SET = 8;

const int NCOM = 297;
tOp tbl_op[NCOM] = {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 6, 2, 6, 2, 6, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 6, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 6, 2, 2, 6, 4, 1};

int duration(tOp op){  
    int duration=0;
    if(op==OP_NOT) duration=3;
    if(op==OP_DLY) duration=10;
    if(op==OP_AND) duration=10;
    if(op==OP_NAND) duration=13;
    if(op==OP_OR) duration=10;
    if(op==OP_NOR) duration=13;
    if(op==OP_XOR) duration=20;
    if(op==OP_XNOR) duration=23;
    if(op==OP_SET) duration=0;
    return duration;
}

broadcast chan go, pwrUp;

const double COVERAGE_RATIO = 100.0;
const int DLY_ZERO = 0;

const int TBL_PWR2[31] = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824};

broadcast chan update;
broadcast chan cmpDone;

const int MAX_BITS = 1024;
bool bits[MAX_BITS];
bool difference=false;
bool dif2=false;
int diffctrl=0;
int[-MAX_INT, MAX_INT] err_magn_v;    
double err_magn_r;

int bitsCovered;
double inCoverage;

bool allCovered=false;

const int NIB_MUL2 = 16;
const int NOB_MUL2 = 16;
const int NTV_MUL2 = TBL_PWR2[NIB_MUL2]; 
const int DLY_MUL2 = 20;                 

/* ===------------------------  ------------------------==== */
int getMasked(int w, int offset, int[0,MAX_INT] data){ 
    int mask = (TBL_PWR2[w]-1);    
   return (data &amp; (mask &lt;&lt; offset)) &gt;&gt; offset;     
}    
bool getBit(int pos, int[0,MAX_INT] data){ return getMasked(1, pos, data); }

const int NIB_ANY = 16;
const int NOB_ANY = 16;
const int NTV_ANY = TBL_PWR2[NIB_ANY]; 
const int DLY_ANY = 20;                 
bool tbl_acc_any[TBL_PWR2[NIB_ANY]][NIB_ANY+NOB_ANY];
//
const int NFUN = 1;
typedef int[0,NFUN-1] tFun;
//-------
const tFun F_MUL = 0;
//
void fill_tbl_acc_any(int win, int wout, tFun f, int fdly){ 
    int[0,MAX_INT] i;
    int[0,MAX_INT] result;
    int j, k, op0, op1;
    for(i=0; i&lt;TBL_PWR2[win]; i++){    
        for(j=0; j&lt;win; j++){
            tbl_acc_any[i][j] = getBit(j,i);
        }
        if(f==F_MUL){
            op0 = getMasked(win/2, 0, i);
            op1 = getMasked(win/2, win/2, i);
            result = op0*op1;
        }
        else { result = 0; }
        for(k=0; k&lt;wout; k++){
            tbl_acc_any[i][win+(wout-k-1)] = getBit(k,result);
        }
    }
}

/* ===------------------------  ------------------------==== */
const int NPI = NIB_MUL2;    
const int NPO = NOB_MUL2;   
//
const int NTV = NTV_MUL2; 
const int DLY = DLY_MUL2;
//
const int PIxy[NPI] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
const int POx[NPO] = {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
//
const int POy[NPO] = {32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47};

int[0, 1073741824] PWR2_NPI = TBL_PWR2[NPI];
/* ===------------------------  ------------------------==== */

const int MAX_INNER_NODES = 1000;
typedef struct {
    int dly;
    bool flag;
} sNode;
sNode nodes[MAX_INNER_NODES];

const int MAX_INNER_GATES = 1000;
typedef struct {
    bool active;
    int in0;
    int in1;
    int inAvail;
    int out0;
    int dly;
    int depth;
    bool flag;
} sGate;
sGate gates[MAX_INNER_GATES];

int[0, 1073741824] approxCircNodes = 0;
int[0, 1073741824] approxCircGates = 0;
int approxCircDly=0;
int[0, 1073741824] approxCircDepth=0;


bool outEq(){
    bool same=true;
    int i;
    hamming_distance = 0;
    for(i=0; i&lt;NPO; i++){
        if((POx[i]&gt;=0) &amp;&amp; (POy[i]&gt;=0)){
            if(bits[POx[i]] != bits[POy[i]]){
                hamming_distance++;
                same = false;
            }
        }
    }
    
    if (same == false) {
        dif_count = dif_count + 1;
    }

    res_count = res_count + 1;

    return same;
}

double EP() {
    //error probability
    //number of different outputs divided by number of results
    double ret = dif_count / res_count;

    return ret;
}

double MAE() {
    //mean absolute error
    //sum of differences (approx. vs acc.) divided by number of results
    double ret = out_sum_all_diff / res_count;

    return ret;
}

double MSE() {
    //mean squared error
    //sum of squared differences divided by number of results
    double ret = out_sum_all_diff_squared / res_count;

    return ret;
}

double MRE() {
    //mean relative error
    //mean error in relation to size of accurate output
    double ret = out_sum_relative / res_count;

    return ret;
}

void calc_metrics() {
    error_prob = EP();
    mean_abs_error = MAE();
    mean_squared_error = MSE();
    mean_relative_error = MRE();
}

int[0, MAX_INT] res_acc=0;
int[0, MAX_INT] res_approx=0;

void diff(){
    int i;
    double res_dif;
    double relative_res_dif;
    res_acc = 0;
    res_approx = 0;

    difference = !outEq();

     for(i=0; i&lt;=NPO-1; i++){                                       
        res_acc += bits[i+NPI]*TBL_PWR2[i];
        if(POy[i]&gt;=0) res_approx += bits[i+NPI+NPO]*TBL_PWR2[i];    
    }
    out_sum_all_acc = out_sum_all_acc + res_acc;
    out_sum_all_approx = out_sum_all_approx + res_approx;

    out_sum_all_diff = fabs(out_sum_all_acc - out_sum_all_approx);
    out_sum_all_diff_squared = out_sum_all_diff_squared + pow(abs(res_approx-res_acc),2);
    out_sum_relative = out_sum_relative + (abs(res_approx-res_acc) / fmax(1.0, 1.0*res_acc));

    res_dif = 1.0 * abs(res_approx - res_acc);
    if (res_dif &gt; worst_case_error) {
        worst_case_error = res_dif;
    }

    relative_res_dif = abs(res_approx - res_acc) / fmax(1.0, 1.0*res_acc);
    if (relative_res_dif &gt; worst_case_relative_error) {
        worst_case_relative_error = relative_res_dif;
    }

    err_magn_v = res_acc - res_approx;
    if(res_acc!=0) err_magn_r = 1-((1.0*res_approx)/(1.0*res_acc));

    calc_metrics();
}
</declaration>
	<template>
		<name>tmul2any</name>
		<parameter>const int &amp;PIxy[NPI], const int &amp;POx[NPO], bool &amp;ttbl[TBL_PWR2[NIB_ANY]][NIB_ANY+NOB_ANY], const int  dly</parameter>
		<declaration>
clock x;

int getIdx(int i){
    int idx=-1;

    if(i &lt; NPI) {
        idx = PIxy[i];
    }
    else {
        idx = POx[i-NPI];
    }

    return idx;
}


int[0, MAX_INT] bin2dec()
{
    int[0, MAX_INT] result=0;
    int i;
    for(i=0; i&lt;NIB_MUL2; i++){
        result += bits[getIdx(i)]*TBL_PWR2[i];
    }

    return result;
}


int getOut(){
    int res, i;
    for(i=NIB_MUL2; i&lt;NIB_MUL2+NOB_MUL2; i++){
        res += bits[getIdx(i)]*TBL_PWR2[i-NIB_MUL2];
    }
    return res;    
}

void f(){
    if(POx[15]&gt;=0) bits[POx[15]]=ttbl[bin2dec()][16];
    if(POx[14]&gt;=0) bits[POx[14]]=ttbl[bin2dec()][17];
    if(POx[13]&gt;=0) bits[POx[13]]=ttbl[bin2dec()][18];
    if(POx[12]&gt;=0) bits[POx[12]]=ttbl[bin2dec()][19];
    if(POx[11]&gt;=0) bits[POx[11]]=ttbl[bin2dec()][20];
    if(POx[10]&gt;=0) bits[POx[10]]=ttbl[bin2dec()][21];
    if(POx[9]&gt;=0) bits[POx[9]]=ttbl[bin2dec()][22];
    if(POx[8]&gt;=0) bits[POx[8]]=ttbl[bin2dec()][23];
    if(POx[7]&gt;=0) bits[POx[7]]=ttbl[bin2dec()][24];
    if(POx[6]&gt;=0) bits[POx[6]]=ttbl[bin2dec()][25];
    if(POx[5]&gt;=0) bits[POx[5]]=ttbl[bin2dec()][26];
    if(POx[4]&gt;=0) bits[POx[4]]=ttbl[bin2dec()][27];
    if(POx[3]&gt;=0) bits[POx[3]]=ttbl[bin2dec()][28];
    if(POx[2]&gt;=0) bits[POx[2]]=ttbl[bin2dec()][29];
    if(POx[1]&gt;=0) bits[POx[1]]=ttbl[bin2dec()][30];
    if(POx[0]&gt;=0) bits[POx[0]]=ttbl[bin2dec()][31];

    diffctrl++;
}

void inits(){
    fill_tbl_acc_any(NIB_ANY, NOB_ANY, F_MUL, dly);
}

</declaration>
		<location id="id0" x="-170" y="0">
		</location>
		<location id="id1" x="0" y="0">
			<label kind="invariant" x="-25" y="17">x&lt;=dly</label>
		</location>
		<location id="id2" x="-374" y="0">
			<committed/>
		</location>
		<init ref="id2"/>
		<transition id="id3">
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="assignment" x="-297" y="0">inits()</label>
		</transition>
		<transition id="id4">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-152" y="-136">x==dly</label>
			<label kind="assignment" x="17" y="-59">f()</label>
			<nail x="0" y="-102"/>
			<nail x="-170" y="-102"/>
		</transition>
		<transition id="id5">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-110" y="-25">update?</label>
			<label kind="assignment" x="-93" y="0">x=0</label>
		</transition>
	</template>
	<template>
		<name>tmul2_tb_exhaust</name>
		<parameter>const int &amp;PIxy[NPI], const int dly, const double covratio</parameter>
		<declaration>
clock x;
clock tcover;
int input=0;
int nsame=0, inSame=0;
double rCover;

bool inCoverSet[NTV];

int covered()
{
    int cnt=0;

    for(i: int[0,NTV-1])
    {
        if(inCoverSet[i]) {
            cnt++;
        }
    }

    bitsCovered=cnt;

    return cnt;
}

int bin2dec()
{
    int result=0, i;
    for(i=0; i&lt;NPI; i++){
        result += bits[i]*TBL_PWR2[i];
    }

    return result;
}


bool inCovered()
{
  return forall (i : int[0,NTV-1]) inCoverSet[i];    
}



void f(){
    bits[PIxy[0]] = getBit(0, input);
    bits[PIxy[1]] = getBit(1, input);
    bits[PIxy[2]] = getBit(2, input);
    bits[PIxy[3]] = getBit(3, input);
    bits[PIxy[4]] = getBit(4, input);
    bits[PIxy[5]] = getBit(5, input);
    bits[PIxy[6]] = getBit(6, input);
    bits[PIxy[7]] = getBit(7, input);

    if(inCoverSet[input]) { inSame = -1*input; nsame++; }
    else inSame = input;
    inCoverSet[input] = true;
    input = (input+1) % NTV;
    covered();

    rCover = 100.0*bitsCovered / NTV; 
}

void inits(){
    int i;
    for(i:int[0,MAX_INNER_NODES-1]){ nodes[i].flag=false; }
    for(i:int[0,NPI-1]){
        if(exists(j:int[0,NPI-1]) PIxy[j]==i){ 
            nodes[i].flag=true;    
            nodes[i].dly=0;        
        }
        approxCircNodes++;
    }
    for(i=0; i&lt;approxCircGates; i++) gates[i].flag=false;    
    while(exists(i:int[0,MAX_INNER_GATES-1]) (gates[i].flag==false &amp;&amp; i&lt;approxCircGates)){
        approxCircDepth++;
        for(i=0; i&lt;approxCircGates; i++) {
            if(!gates[i].flag &amp;&amp; nodes[gates[i].in0].flag &amp;&amp; nodes[gates[i].in1].flag){  
                nodes[gates[i].out0].dly = (nodes[gates[i].in0].dly&gt;nodes[gates[i].in1].dly?nodes[gates[i].in0].dly:nodes[gates[i].in1].dly) + duration(tbl_op[i]);
                nodes[gates[i].out0].flag=true;
                approxCircNodes++;
                if(nodes[gates[i].out0].dly&lt;approxCircDly){ approxCircDly=nodes[gates[i].out0].dly; }

                gates[i].flag=true;   
            }  
        }
    }
}
</declaration>
		<location id="id6" x="-136" y="0">
			<name x="-153" y="8">apply</name>
			<committed/>
		</location>
		<location id="id7" x="-374" y="0">
			<name x="-382" y="8">get</name>
			<committed/>
		</location>
		<location id="id8" x="34" y="0">
			<name x="17" y="8">done</name>
			<label kind="invariant" x="0" y="-34">tcover'==0</label>
		</location>
		<location id="id9" x="-246" y="-102">
			<name x="-255" y="-136">wait</name>
		</location>
		<location id="id10" x="-510" y="0">
			<urgent/>
		</location>
		<init ref="id10"/>
		<transition id="id11">
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="assignment" x="-459" y="0">inits()</label>
		</transition>
		<transition id="id12">
			<source ref="id6"/>
			<target ref="id9"/>
			<label kind="guard" x="-221" y="-93">!inCovered()</label>
			<nail x="-136" y="-102"/>
		</transition>
		<transition id="id13">
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="guard" x="-93" y="-25">inCovered()</label>
			<label kind="assignment" x="-110" y="0">allCovered=true,
x=0</label>
		</transition>
		<transition id="id14">
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-289" y="-25">update!</label>
			<label kind="assignment" x="-280" y="0">f(), x=0</label>
		</transition>
		<transition id="id15">
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-365" y="-93">cmpDone?</label>
			<nail x="-374" y="-102"/>
		</transition>
	</template>
	<template>
		<name>tmul2_tb_nondet</name>
		<parameter>const int range_min, const int range_max, const int dly, const double covratio</parameter>
		<declaration>clock x;
clock tcover;
int input=0;
int nsame=0, inSame=0;
double rCover;
int idx=0;

bool inCoverSet[NTV];

int covered()
{
    int cnt=0;

    for(i: int[0,NTV-1])
    {
        if(inCoverSet[i]) {
            cnt++;
        }
    }

    bitsCovered=cnt;

    return cnt;
}

int bin2dec()
{
    int[0, 1073741824] result=0;
	int i;
    for(i=0; i&lt;NPI; i++){
        result += bits[i]*TBL_PWR2[i];
    }

    return result;
}


bool inCovered()
{
  return forall (i : int[0,NTV-1]) inCoverSet[i];    
}

void f(int i){
    input = bin2dec();
   if(inCoverSet[input]) { inSame = -1*input; nsame++; }
  else inSame = input;
   inCoverSet[bin2dec()] = true;
    covered();

    rCover = 100.0*bitsCovered / NTV; 

    inCoverage = 0.0;
}

void inits(){
    int i;
    for(i:int[0,MAX_INNER_NODES-1]){ nodes[i].flag=false; }
    for(i:int[0,NPI-1]){
        if(exists(j:int[0,NPI-1]) PIxy[j]==i){ 
            nodes[i].flag=true;
            nodes[i].dly=0;      
        }
        approxCircNodes++;
    }
    for(i=0; i&lt;approxCircGates; i++) gates[i].flag=false;    
    while(exists(i:int[0,MAX_INNER_GATES-1]) (gates[i].flag==false &amp;&amp; i&lt;approxCircGates)){
        approxCircDepth++;
        for(i=0; i&lt;approxCircGates; i++) {
            if(!gates[i].flag &amp;&amp; nodes[gates[i].in0].flag &amp;&amp; nodes[gates[i].in1].flag){  
                nodes[gates[i].out0].dly = (nodes[gates[i].in0].dly&gt;nodes[gates[i].in1].dly?nodes[gates[i].in0].dly:nodes[gates[i].in1].dly) + duration(tbl_op[i]);
                nodes[gates[i].out0].flag=true;
                approxCircNodes++;
                if(nodes[gates[i].out0].dly&gt;approxCircDly){ approxCircDly=nodes[gates[i].out0].dly; }

                gates[i].flag=true;
            }  
        }
    }
}</declaration>
		<location id="id16" x="-119" y="-102">
			<name x="-129" y="-136">wait</name>
		</location>
		<location id="id17" x="-246" y="0">
			<name x="-255" y="8">get</name>
			<committed/>
		</location>
		<location id="id18" x="170" y="0">
			<name x="153" y="8">done</name>
			<label kind="invariant" x="136" y="-34">tcover'==0</label>
		</location>
		<location id="id19" x="0" y="0">
			<name x="-17" y="8">apply</name>
			<committed/>
		</location>
		<location id="id20" x="-246" y="-102">
			<committed/>
		</location>
		<location id="id21" x="-374" y="0">
			<urgent/>
		</location>
		<init ref="id21"/>
		<transition id="id22">
			<source ref="id21"/>
			<target ref="id17"/>
			<label kind="assignment" x="-331" y="0">inits()</label>
		</transition>
		<transition id="id23">
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="select" x="-238" y="-68">i: int[range_min, range_max]</label>
			<label kind="assignment" x="-238" y="-51">bits[i] ^= 1, idx=i</label>
		</transition>
		<transition id="id24">
			<source ref="id16"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-212" y="-102">cmpDone?</label>
		</transition>
		<transition id="id25">
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="guard" x="-93" y="-93">!inCovered()</label>
			<nail x="0" y="-102"/>
		</transition>
		<transition id="id26">
			<source ref="id17"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-153" y="-25">update!</label>
			<label kind="assignment" x="-144" y="0">f(idx)</label>
		</transition>
		<transition id="id27">
			<source ref="id19"/>
			<target ref="id18"/>
			<label kind="guard" x="42" y="-25">inCovered()</label>
			<label kind="assignment" x="34" y="0">allCovered=true</label>
		</transition>
	</template>
	<template>
		<name>tmul2_tb_random</name>
		<parameter>const int dly, const double covratio</parameter>
		<declaration>clock x;
clock tcover;
int input=0;
int[0, MAX_INT] nsame=0;
int[0, MAX_INT] inSame=0;
double rCover;
int idx=0;

bool inCoverSet[NTV];

int[0, MAX_INT] covered()
{
    int[0, MAX_INT] cnt=0;

    for(i: int[0,NTV-1])
    {
        if(inCoverSet[i]) {
            cnt++;
        }
    }

    bitsCovered=cnt;

    return cnt;
}

int[0, MAX_INT] bin2dec()
{
    int[0, MAX_INT] result=0;
	int i;
    for(i=0; i&lt;NPI; i++){
        result += bits[i]*TBL_PWR2[i];
    }

    return result;
}


bool inCovered()
{
  return forall (i : int[0,NTV-1]) inCoverSet[i];    
}

void f(int i){
    int j;
    int[0, MAX_INT] imax = fint(exp2(NPI));

//    rnd = random(100);
//    rnd = random_arcsine(-10,10);
//    rnd = random_beta(0.1,5);
//    rnd = random_gamma(0.5,5);
//    rnd = random_normal(10,1);
//    rnd = random_poisson(1.0);
//    rnd = random_weibull(0.5,5);
//    rnd = random_tri(0,10,100);

    j=fint(random(NPI));                   // pro (NPI) je out 0...NPI-1
 //   j=fint(random_normal(NPI/2.0,0.5));    // pro (NPI/2.0, 0.5) je out NPI/2 +- 0.5
 //   j=fint(random_poisson(1.0));           // pro (1.0) je out 1.0 +- 
//    j=fint(random_arcsine(0.0, NPI-1));    // pro (0.0, NPI-1) je out mezi 0...NPI-1 (aka random())
  //  j=fint(random_tri(0.0, 0.5, NPI-1));    // pro (0.0, 0.5, NPI-1) je out mezi 0...NPI-1 (aka random()), se stredem u 0.5
  //  j = fint(random_weibull(10, 3.0));    // pro (10.0, 3.0) je out mezi 0...3 (aka random()), se stredem vys (pro 10)
  //  j = fint(random_gamma(1.0,0.5));    // pro (1.0, 0.5) je out mezi 0...5 (aka random()), se stredem niz (kolem 1.0)
    if(j &lt; 0) j=0;
    if(j &gt; (NPI-1)) j=NPI-1;
    bits[j] ^= 1;

   if(inCoverSet[input]) { inSame = -1*input; nsame++; }
   else inSame = input;
   inCoverSet[bin2dec()] = true;
    covered();

    rCover = 100.0*bitsCovered / NTV; 

    inCoverage = 0.0;
}

void inits(){
    int i;
    for(i:int[0,MAX_INNER_NODES-1]){ nodes[i].flag=false; }
    for(i:int[0,NPI-1]){
        if(exists(j:int[0,NPI-1]) PIxy[j]==i){ 
            nodes[i].flag=true;    
            nodes[i].dly=0;        
        }
        approxCircNodes++;
    }
    for(i=0; i&lt;approxCircGates; i++) gates[i].flag=false;
    while(exists(i:int[0,MAX_INNER_GATES-1]) (gates[i].flag==false &amp;&amp; i&lt;approxCircGates)){
        approxCircDepth++;
        for(i=0; i&lt;approxCircGates; i++) {
            if(!gates[i].flag &amp;&amp; nodes[gates[i].in0].flag &amp;&amp; nodes[gates[i].in1].flag){  
                nodes[gates[i].out0].dly = (nodes[gates[i].in0].dly&gt;nodes[gates[i].in1].dly?nodes[gates[i].in0].dly:nodes[gates[i].in1].dly) + duration(tbl_op[i]);
                nodes[gates[i].out0].flag=true;
                approxCircNodes++;
                if(nodes[gates[i].out0].dly&gt;approxCircDly){ approxCircDly=nodes[gates[i].out0].dly; }

                gates[i].flag=true; 
            }  
        }
    }
}</declaration>
		<location id="id28" x="-119" y="-102">
			<name x="-129" y="-136">wait</name>
		</location>
		<location id="id29" x="-246" y="0">
			<name x="-255" y="8">get</name>
			<committed/>
		</location>
		<location id="id30" x="170" y="0">
			<name x="153" y="8">done</name>
			<label kind="invariant" x="136" y="-34">tcover'==0</label>
		</location>
		<location id="id31" x="0" y="0">
			<name x="-17" y="8">apply</name>
			<committed/>
		</location>
		<location id="id32" x="-246" y="-102">
			<committed/>
		</location>
		<location id="id33" x="-374" y="0">
			<urgent/>
		</location>
		<init ref="id33"/>
		<transition id="id34">
			<source ref="id33"/>
			<target ref="id29"/>
			<label kind="assignment" x="-331" y="0">inits()</label>
		</transition>
		<transition id="id35">
			<source ref="id32"/>
			<target ref="id29"/>
		</transition>
		<transition id="id36">
			<source ref="id28"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-212" y="-102">cmpDone?</label>
		</transition>
		<transition id="id37">
			<source ref="id31"/>
			<target ref="id28"/>
			<label kind="guard" x="-93" y="-93">!inCovered()</label>
			<nail x="0" y="-102"/>
		</transition>
		<transition id="id38">
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-153" y="-25">update!</label>
			<label kind="assignment" x="-144" y="0">f(idx)</label>
		</transition>
		<transition id="id39">
			<source ref="id31"/>
			<target ref="id30"/>
			<label kind="guard" x="42" y="-25">inCovered()</label>
			<label kind="assignment" x="34" y="0">allCovered=true</label>
		</transition>
	</template>
	<template>
		<name>syncPrimary</name>
		<declaration>int idx;</declaration>
		<location id="id40" x="-748" y="-306">
		</location>
		<location id="id41" x="-646" y="-306">
			<committed/>
		</location>
		<location id="id42" x="-510" y="-306">
			<committed/>
		</location>
		<init ref="id40"/>
		<transition id="id43">
			<source ref="id42"/>
			<target ref="id40"/>
			<label kind="guard" x="-646" y="-399">idx&gt;=NPI</label>
			<nail x="-510" y="-374"/>
			<nail x="-748" y="-374"/>
		</transition>
		<transition id="id44">
			<source ref="id42"/>
			<target ref="id41"/>
			<label kind="guard" x="-595" y="-323">idx&lt;NPI</label>
			<nail x="-578" y="-272"/>
		</transition>
		<transition id="id45">
			<source ref="id41"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-612" y="-340">change[idx]!</label>
			<label kind="assignment" x="-629" y="-280">idx++</label>
		</transition>
		<transition id="id46">
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-730" y="-323">update?</label>
			<label kind="assignment" x="-714" y="-306">idx=0</label>
		</transition>
	</template>
	<template>
		<name>eval_diff</name>
		<parameter>const int dly</parameter>
		<declaration>clock x;</declaration>
		<location id="id47" x="-238" y="0">
			<label kind="invariant" x="-297" y="-8">x&lt;=dly</label>
		</location>
		<location id="id48" x="-102" y="0">
			<committed/>
		</location>
		<init ref="id47"/>
		<transition id="id49">
			<source ref="id48"/>
			<target ref="id47"/>
			<label kind="synchronisation" x="-178" y="51">cmpDone!</label>
			<label kind="assignment" x="-246" y="110">outcnt=0, diffctrl=0, x=0</label>
			<nail x="-102" y="110"/>
			<nail x="-238" y="110"/>
		</transition>
		<transition id="id50">
			<source ref="id47"/>
			<target ref="id47"/>
			<label kind="guard" x="-331" y="-93">diffctrl&lt;2
&amp;&amp; x==dly</label>
			<label kind="assignment" x="-289" y="-42">x=0</label>
			<nail x="-263" y="-76"/>
			<nail x="-229" y="-76"/>
		</transition>
		<transition id="id51">
			<source ref="id47"/>
			<target ref="id48"/>
			<label kind="guard" x="-204" y="0">diffctrl==2</label>
			<label kind="assignment" x="-212" y="-68">err_magn_v=0,
err_magn_r=0.0,
diff()</label>
		</transition>
	</template>
	<template>
		<name>gate2</name>
		<parameter>const int id, const int a0, const int a1, const int y0, broadcast chan &amp;cin0, broadcast chan &amp;cin1, broadcast chan &amp;cout0</parameter>
		<declaration>clock x;

void inits(){
    int i;

    // collect info about the approx.circuit topology 
    gates[id].active = true;
    gates[id].in0 = a0; 
    gates[id].in1 = a1; 
    gates[id].inAvail = 0; 
    gates[id].out0 = y0; 
    gates[id].dly = duration(tbl_op[id]);
    gates[id].depth = -1;
    gates[id].flag = false;

    approxCircGates++;    
}

void outGen(tOp op){
 //   outSync(y0);

	bool original_bit = bits[y0];

    if(op == OP_AND){
        bits[y0] = bits[a0] &amp; bits[a1];        
    }
    else if(op == OP_NAND){
        bits[y0] = not (bits[a0] &amp; bits[a1]);        
    }
    else if(op == OP_OR){
        bits[y0] = bits[a0] | bits[a1];        
    }
    else if(op == OP_NOR){
        bits[y0] = not (bits[a0] | bits[a1]);        
    }
    else if(op == OP_XOR){
        bits[y0] = (bits[a0] != bits[a1]);        
    }
    else if(op == OP_XNOR){
        bits[y0] = (bits[a0] == bits[a1]);
    }
    else if(op == OP_SET){
        //not really a gate but should be fine
        bits[y0] = bits[a0];
    }
    else {    // unsupported operation
    }

	if(original_bit != bits[y0]) {
		bit_flips = bit_flips + 1;
	}

    if(id==2){ 
        if(diffctrl&lt;2) diffctrl++;
    }  
}</declaration>
		<location id="id52" x="-170" y="0">
		</location>
		<location id="id53" x="0" y="0">
			<label kind="invariant" x="-17" y="17">x&lt;=duration(tbl_op[id])</label>
		</location>
		<location id="id54" x="-272" y="0">
			<committed/>
		</location>
		<init ref="id54"/>
		<transition id="id55">
			<source ref="id54"/>
			<target ref="id52"/>
			<label kind="assignment" x="-238" y="0">inits()</label>
		</transition>
		<transition id="id56">
			<source ref="id52"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-144" y="0">cin1?</label>
			<label kind="assignment" x="-76" y="0">x=0</label>
			<nail x="-85" y="0"/>
		</transition>
		<transition id="id57">
			<source ref="id53"/>
			<target ref="id52"/>
			<label kind="guard" x="-110" y="-127">x==duration(tbl_op[id])</label>
			<label kind="synchronisation" x="8" y="-68">cout0!</label>
			<label kind="assignment" x="-144" y="-102">outGen(tbl_op[id])</label>
			<nail x="0" y="-102"/>
			<nail x="-170" y="-102"/>
		</transition>
		<transition id="id58">
			<source ref="id52"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-136" y="-42">cin0?</label>
			<label kind="assignment" x="-59" y="-42">x=0</label>
			<nail x="-85" y="-34"/>
		</transition>
	</template>
	<system>
// Place template instantiations here.

synPri = syncPrimary();
mul2A = tmul2any(PIxy, POx, tbl_acc_any, DLY_MUL2);

//mul2Atb = tmul2_tb_exhaust(PIxy, DLY_MUL2, COVERAGE_RATIO);
//mul2Atb = tmul2_tb_nondet(PIxy[0], PIxy[7], DLY_MUL2, COVERAGE_RATIO);
mul2Atb = tmul2_tb_random(DLY_MUL2, COVERAGE_RATIO);

ediff = eval_diff(5);

//gates
g16 = gate2(0, PIxy[8], PIxy[0], POy[0], change[8], change[0], change[16]);
g17 = gate2(1, PIxy[9], PIxy[0], 17, change[9], change[0], change[17]);
g18 = gate2(2, PIxy[10], PIxy[0], 18, change[10], change[0], change[18]);
g19 = gate2(3, PIxy[11], PIxy[0], 19, change[11], change[0], change[19]);
g20 = gate2(4, PIxy[12], PIxy[0], 20, change[12], change[0], change[20]);
g21 = gate2(5, PIxy[13], PIxy[0], 21, change[13], change[0], change[21]);
g22 = gate2(6, PIxy[14], PIxy[0], 22, change[14], change[0], change[22]);
g23 = gate2(7, PIxy[15], PIxy[0], 23, change[15], change[0], change[23]);
g24 = gate2(8, PIxy[8], PIxy[1], 24, change[8], change[1], change[24]);
g25 = gate2(9, PIxy[9], PIxy[1], 25, change[9], change[1], change[25]);
g26 = gate2(10, PIxy[10], PIxy[1], 26, change[10], change[1], change[26]);
g27 = gate2(11, PIxy[11], PIxy[1], 27, change[11], change[1], change[27]);
g28 = gate2(12, PIxy[12], PIxy[1], 28, change[12], change[1], change[28]);
g29 = gate2(13, PIxy[13], PIxy[1], 29, change[13], change[1], change[29]);
g30 = gate2(14, PIxy[14], PIxy[1], 30, change[14], change[1], change[30]);
g31 = gate2(15, PIxy[15], PIxy[1], 31, change[15], change[1], change[31]);
g32 = gate2(16, 17, 24, POy[1], change[17], change[24], change[32]);
g34 = gate2(17, 18, 25, 34, change[18], change[25], change[34]);
g36 = gate2(18, 19, 26, 36, change[19], change[26], change[36]);
g38 = gate2(19, 20, 27, 38, change[20], change[27], change[38]);
g39 = gate2(20, 20, 27, 39, change[20], change[27], change[39]);
g40 = gate2(21, 21, 28, 40, change[21], change[28], change[40]);
g41 = gate2(22, 21, 28, 41, change[21], change[28], change[41]);
g42 = gate2(23, 22, 29, 42, change[22], change[29], change[42]);
g43 = gate2(24, 22, 29, 43, change[22], change[29], change[43]);
g44 = gate2(25, 23, 30, 44, change[23], change[30], change[44]);
g45 = gate2(26, 23, 30, 45, change[23], change[30], change[45]);
g46 = gate2(27, PIxy[8], PIxy[2], 46, change[8], change[2], change[46]);
g47 = gate2(28, PIxy[9], PIxy[2], 47, change[9], change[2], change[47]);
g48 = gate2(29, PIxy[10], PIxy[2], 48, change[10], change[2], change[48]);
g49 = gate2(30, PIxy[11], PIxy[2], 49, change[11], change[2], change[49]);
g50 = gate2(31, PIxy[12], PIxy[2], 50, change[12], change[2], change[50]);
g51 = gate2(32, PIxy[13], PIxy[2], 51, change[13], change[2], change[51]);
g52 = gate2(33, PIxy[14], PIxy[2], 52, change[14], change[2], change[52]);
g53 = gate2(34, PIxy[15], PIxy[2], 53, change[15], change[2], change[53]);
g54 = gate2(35, 34, 46, POy[2], change[34], change[46], change[54]);
g59 = gate2(36, 36, 47, 59, change[36], change[47], change[59]);
g64 = gate2(37, 38, 48, 64, change[38], change[48], change[64]);
g65 = gate2(38, 38, 48, 65, change[38], change[48], change[65]);
g69 = gate2(39, 40, 49, 69, change[40], change[49], change[69]);
g70 = gate2(40, 40, 49, 70, change[40], change[49], change[70]);
g71 = gate2(41, 69, 39, 71, change[69], change[39], change[71]);
g72 = gate2(42, 69, 39, 72, change[69], change[39], change[72]);
g73 = gate2(43, 70, 71, 73, change[70], change[71], change[73]);
g74 = gate2(44, 42, 50, 74, change[42], change[50], change[74]);
g75 = gate2(45, 42, 50, 75, change[42], change[50], change[75]);
g76 = gate2(46, 74, 41, 76, change[74], change[41], change[76]);
g77 = gate2(47, 74, 41, 77, change[74], change[41], change[77]);
g78 = gate2(48, 75, 76, 78, change[75], change[76], change[78]);
g79 = gate2(49, 44, 51, 79, change[44], change[51], change[79]);
g80 = gate2(50, 44, 51, 80, change[44], change[51], change[80]);
g81 = gate2(51, 79, 43, 81, change[79], change[43], change[81]);
g82 = gate2(52, 79, 43, 82, change[79], change[43], change[82]);
g83 = gate2(53, 80, 81, 83, change[80], change[81], change[83]);
g84 = gate2(54, 31, 52, 84, change[31], change[52], change[84]);
g85 = gate2(55, 31, 52, 85, change[31], change[52], change[85]);
g87 = gate2(56, 84, 45, 87, change[84], change[45], change[87]);
g88 = gate2(57, 85, 45, 88, change[85], change[45], change[88]);
g89 = gate2(58, PIxy[8], PIxy[3], 89, change[8], change[3], change[89]);
g90 = gate2(59, PIxy[9], PIxy[3], 90, change[9], change[3], change[90]);
g91 = gate2(60, PIxy[10], PIxy[3], 91, change[10], change[3], change[91]);
g92 = gate2(61, PIxy[11], PIxy[3], 92, change[11], change[3], change[92]);
g93 = gate2(62, PIxy[12], PIxy[3], 93, change[12], change[3], change[93]);
g94 = gate2(63, PIxy[13], PIxy[3], 94, change[13], change[3], change[94]);
g95 = gate2(64, PIxy[14], PIxy[3], 95, change[14], change[3], change[95]);
g96 = gate2(65, PIxy[15], PIxy[3], 96, change[15], change[3], change[96]);
g97 = gate2(66, 59, 89, POy[3], change[59], change[89], change[97]);
g102 = gate2(67, 64, 90, 102, change[64], change[90], change[102]);
g103 = gate2(68, 64, 90, 103, change[64], change[90], change[103]);
g107 = gate2(69, 72, 91, 107, change[72], change[91], change[107]);
g108 = gate2(70, 72, 91, 108, change[72], change[91], change[108]);
g109 = gate2(71, 107, 65, 109, change[107], change[65], change[109]);
g110 = gate2(72, 107, 65, 110, change[107], change[65], change[110]);
g111 = gate2(73, 108, 109, 111, change[108], change[109], change[111]);
g112 = gate2(74, 77, 92, 112, change[77], change[92], change[112]);
g113 = gate2(75, 77, 92, 113, change[77], change[92], change[113]);
g114 = gate2(76, 112, 73, 114, change[112], change[73], change[114]);
g115 = gate2(77, 112, 73, 115, change[112], change[73], change[115]);
g116 = gate2(78, 113, 114, 116, change[113], change[114], change[116]);
g117 = gate2(79, 82, 93, 117, change[82], change[93], change[117]);
g118 = gate2(80, 82, 93, 118, change[82], change[93], change[118]);
g119 = gate2(81, 117, 78, 119, change[117], change[78], change[119]);
g120 = gate2(82, 117, 78, 120, change[117], change[78], change[120]);
g121 = gate2(83, 118, 119, 121, change[118], change[119], change[121]);
g122 = gate2(84, 87, 94, 122, change[87], change[94], change[122]);
g123 = gate2(85, 87, 94, 123, change[87], change[94], change[123]);
g124 = gate2(86, 122, 83, 124, change[122], change[83], change[124]);
g125 = gate2(87, 122, 83, 125, change[122], change[83], change[125]);
g126 = gate2(88, 123, 124, 126, change[123], change[124], change[126]);
g127 = gate2(89, 53, 95, 127, change[53], change[95], change[127]);
g128 = gate2(90, 53, 95, 128, change[53], change[95], change[128]);
g129 = gate2(91, 127, 88, 129, change[127], change[88], change[129]);
g130 = gate2(92, 127, 88, 130, change[127], change[88], change[130]);
g131 = gate2(93, 128, 129, 131, change[128], change[129], change[131]);
g132 = gate2(94, PIxy[8], PIxy[4], 132, change[8], change[4], change[132]);
g133 = gate2(95, PIxy[9], PIxy[4], 133, change[9], change[4], change[133]);
g134 = gate2(96, PIxy[10], PIxy[4], 134, change[10], change[4], change[134]);
g135 = gate2(97, PIxy[11], PIxy[4], 135, change[11], change[4], change[135]);
g136 = gate2(98, PIxy[12], PIxy[4], 136, change[12], change[4], change[136]);
g137 = gate2(99, PIxy[13], PIxy[4], 137, change[13], change[4], change[137]);
g138 = gate2(100, PIxy[14], PIxy[4], 138, change[14], change[4], change[138]);
g139 = gate2(101, PIxy[15], PIxy[4], 139, change[15], change[4], change[139]);
g140 = gate2(102, 102, 132, 140, change[102], change[132], change[140]);
g141 = gate2(103, 102, 132, 141, change[102], change[132], change[141]);
g143 = gate2(104, 140, 103, POy[4], change[140], change[103], change[143]);
g145 = gate2(105, 110, 133, 145, change[110], change[133], change[145]);
g146 = gate2(106, 110, 133, 146, change[110], change[133], change[146]);
g147 = gate2(107, 145, 103, 147, change[145], change[103], change[147]);
g148 = gate2(108, 145, 103, 148, change[145], change[103], change[148]);
g149 = gate2(109, 146, 147, 149, change[146], change[147], change[149]);
g150 = gate2(110, 115, 134, 150, change[115], change[134], change[150]);
g151 = gate2(111, 115, 134, 151, change[115], change[134], change[151]);
g152 = gate2(112, 150, 111, 152, change[150], change[111], change[152]);
g153 = gate2(113, 150, 111, 153, change[150], change[111], change[153]);
g154 = gate2(114, 151, 152, 154, change[151], change[152], change[154]);
g155 = gate2(115, 120, 135, 155, change[120], change[135], change[155]);
g156 = gate2(116, 120, 135, 156, change[120], change[135], change[156]);
g157 = gate2(117, 155, 116, 157, change[155], change[116], change[157]);
g158 = gate2(118, 155, 116, 158, change[155], change[116], change[158]);
g159 = gate2(119, 156, 157, 159, change[156], change[157], change[159]);
g160 = gate2(120, 125, 136, 160, change[125], change[136], change[160]);
g161 = gate2(121, 125, 136, 161, change[125], change[136], change[161]);
g162 = gate2(122, 160, 121, 162, change[160], change[121], change[162]);
g163 = gate2(123, 160, 121, 163, change[160], change[121], change[163]);
g164 = gate2(124, 161, 162, 164, change[161], change[162], change[164]);
g165 = gate2(125, 130, 137, 165, change[130], change[137], change[165]);
g166 = gate2(126, 130, 137, 166, change[130], change[137], change[166]);
g167 = gate2(127, 165, 126, 167, change[165], change[126], change[167]);
g168 = gate2(128, 165, 126, 168, change[165], change[126], change[168]);
g169 = gate2(129, 166, 167, 169, change[166], change[167], change[169]);
g170 = gate2(130, 96, 138, 170, change[96], change[138], change[170]);
g171 = gate2(131, 96, 138, 171, change[96], change[138], change[171]);
g172 = gate2(132, 170, 131, 172, change[170], change[131], change[172]);
g173 = gate2(133, 170, 131, 173, change[170], change[131], change[173]);
g174 = gate2(134, 171, 172, 174, change[171], change[172], change[174]);
g175 = gate2(135, PIxy[8], PIxy[5], 175, change[8], change[5], change[175]);
g176 = gate2(136, PIxy[9], PIxy[5], 176, change[9], change[5], change[176]);
g177 = gate2(137, PIxy[10], PIxy[5], 177, change[10], change[5], change[177]);
g178 = gate2(138, PIxy[11], PIxy[5], 178, change[11], change[5], change[178]);
g179 = gate2(139, PIxy[12], PIxy[5], 179, change[12], change[5], change[179]);
g180 = gate2(140, PIxy[13], PIxy[5], 180, change[13], change[5], change[180]);
g181 = gate2(141, PIxy[14], PIxy[5], 181, change[14], change[5], change[181]);
g182 = gate2(142, PIxy[15], PIxy[5], 182, change[15], change[5], change[182]);
g183 = gate2(143, 148, 175, 183, change[148], change[175], change[183]);
g184 = gate2(144, 148, 175, 184, change[148], change[175], change[184]);
g185 = gate2(145, 183, 141, 185, change[183], change[141], change[185]);
g186 = gate2(146, 183, 141, POy[5], change[183], change[141], change[186]);
g187 = gate2(147, 184, 185, 187, change[184], change[185], change[187]);
g188 = gate2(148, 153, 176, 188, change[153], change[176], change[188]);
g189 = gate2(149, 153, 176, 189, change[153], change[176], change[189]);
g190 = gate2(150, 188, 149, 190, change[188], change[149], change[190]);
g191 = gate2(151, 188, 149, 191, change[188], change[149], change[191]);
g192 = gate2(152, 189, 190, 192, change[189], change[190], change[192]);
g193 = gate2(153, 158, 177, 193, change[158], change[177], change[193]);
g194 = gate2(154, 158, 177, 194, change[158], change[177], change[194]);
g195 = gate2(155, 193, 154, 195, change[193], change[154], change[195]);
g196 = gate2(156, 193, 154, 196, change[193], change[154], change[196]);
g197 = gate2(157, 194, 195, 197, change[194], change[195], change[197]);
g198 = gate2(158, 163, 178, 198, change[163], change[178], change[198]);
g199 = gate2(159, 163, 178, 199, change[163], change[178], change[199]);
g200 = gate2(160, 198, 159, 200, change[198], change[159], change[200]);
g201 = gate2(161, 198, 159, 201, change[198], change[159], change[201]);
g202 = gate2(162, 199, 200, 202, change[199], change[200], change[202]);
g203 = gate2(163, 168, 179, 203, change[168], change[179], change[203]);
g204 = gate2(164, 168, 179, 204, change[168], change[179], change[204]);
g205 = gate2(165, 203, 164, 205, change[203], change[164], change[205]);
g206 = gate2(166, 203, 164, 206, change[203], change[164], change[206]);
g207 = gate2(167, 204, 205, 207, change[204], change[205], change[207]);
g208 = gate2(168, 173, 180, 208, change[173], change[180], change[208]);
g209 = gate2(169, 173, 180, 209, change[173], change[180], change[209]);
g210 = gate2(170, 208, 169, 210, change[208], change[169], change[210]);
g211 = gate2(171, 208, 169, 211, change[208], change[169], change[211]);
g212 = gate2(172, 209, 210, 212, change[209], change[210], change[212]);
g213 = gate2(173, 139, 181, 213, change[139], change[181], change[213]);
g214 = gate2(174, 139, 181, 214, change[139], change[181], change[214]);
g215 = gate2(175, 213, 174, 215, change[213], change[174], change[215]);
g216 = gate2(176, 213, 174, 216, change[213], change[174], change[216]);
g217 = gate2(177, 214, 215, 217, change[214], change[215], change[217]);
g218 = gate2(178, PIxy[8], PIxy[6], 218, change[8], change[6], change[218]);
g219 = gate2(179, PIxy[9], PIxy[6], 219, change[9], change[6], change[219]);
g220 = gate2(180, PIxy[10], PIxy[6], 220, change[10], change[6], change[220]);
g221 = gate2(181, PIxy[11], PIxy[6], 221, change[11], change[6], change[221]);
g222 = gate2(182, PIxy[12], PIxy[6], 222, change[12], change[6], change[222]);
g223 = gate2(183, PIxy[13], PIxy[6], 223, change[13], change[6], change[223]);
g224 = gate2(184, PIxy[14], PIxy[6], 224, change[14], change[6], change[224]);
g225 = gate2(185, PIxy[15], PIxy[6], 225, change[15], change[6], change[225]);
g226 = gate2(186, 191, 218, 226, change[191], change[218], change[226]);
g227 = gate2(187, 191, 218, 227, change[191], change[218], change[227]);
g228 = gate2(188, 226, 187, 228, change[226], change[187], change[228]);
g229 = gate2(189, 226, 187, POy[6], change[226], change[187], change[229]);
g230 = gate2(190, 227, 228, 230, change[227], change[228], change[230]);
g231 = gate2(191, 196, 219, 231, change[196], change[219], change[231]);
g232 = gate2(192, 196, 219, 232, change[196], change[219], change[232]);
g233 = gate2(193, 231, 192, 233, change[231], change[192], change[233]);
g234 = gate2(194, 231, 192, 234, change[231], change[192], change[234]);
g235 = gate2(195, 232, 233, 235, change[232], change[233], change[235]);
g236 = gate2(196, 201, 220, 236, change[201], change[220], change[236]);
g237 = gate2(197, 201, 220, 237, change[201], change[220], change[237]);
g238 = gate2(198, 236, 197, 238, change[236], change[197], change[238]);
g239 = gate2(199, 236, 197, 239, change[236], change[197], change[239]);
g240 = gate2(200, 237, 238, 240, change[237], change[238], change[240]);
g241 = gate2(201, 206, 221, 241, change[206], change[221], change[241]);
g242 = gate2(202, 206, 221, 242, change[206], change[221], change[242]);
g243 = gate2(203, 241, 202, 243, change[241], change[202], change[243]);
g244 = gate2(204, 241, 202, 244, change[241], change[202], change[244]);
g245 = gate2(205, 242, 243, 245, change[242], change[243], change[245]);
g246 = gate2(206, 211, 222, 246, change[211], change[222], change[246]);
g247 = gate2(207, 211, 222, 247, change[211], change[222], change[247]);
g248 = gate2(208, 246, 207, 248, change[246], change[207], change[248]);
g249 = gate2(209, 246, 207, 249, change[246], change[207], change[249]);
g250 = gate2(210, 247, 248, 250, change[247], change[248], change[250]);
g251 = gate2(211, 216, 223, 251, change[216], change[223], change[251]);
g252 = gate2(212, 216, 223, 252, change[216], change[223], change[252]);
g253 = gate2(213, 251, 212, 253, change[251], change[212], change[253]);
g254 = gate2(214, 251, 212, 254, change[251], change[212], change[254]);
g255 = gate2(215, 252, 253, 255, change[252], change[253], change[255]);
g256 = gate2(216, 182, 224, 256, change[182], change[224], change[256]);
g257 = gate2(217, 182, 224, 257, change[182], change[224], change[257]);
g258 = gate2(218, 256, 217, 258, change[256], change[217], change[258]);
g259 = gate2(219, 256, 217, 259, change[256], change[217], change[259]);
g260 = gate2(220, 257, 258, 260, change[257], change[258], change[260]);
g261 = gate2(221, PIxy[8], PIxy[7], 261, change[8], change[7], change[261]);
g262 = gate2(222, PIxy[9], PIxy[7], 262, change[9], change[7], change[262]);
g263 = gate2(223, PIxy[10], PIxy[7], 263, change[10], change[7], change[263]);
g264 = gate2(224, PIxy[11], PIxy[7], 264, change[11], change[7], change[264]);
g265 = gate2(225, PIxy[12], PIxy[7], 265, change[12], change[7], change[265]);
g266 = gate2(226, PIxy[13], PIxy[7], 266, change[13], change[7], change[266]);
g267 = gate2(227, PIxy[14], PIxy[7], 267, change[14], change[7], change[267]);
g268 = gate2(228, PIxy[15], PIxy[7], 268, change[15], change[7], change[268]);
g269 = gate2(229, 234, 261, 269, change[234], change[261], change[269]);
g270 = gate2(230, 234, 261, 270, change[234], change[261], change[270]);
g271 = gate2(231, 269, 230, 271, change[269], change[230], change[271]);
g272 = gate2(232, 269, 230, POy[7], change[269], change[230], change[272]);
g273 = gate2(233, 270, 271, 273, change[270], change[271], change[273]);
g274 = gate2(234, 239, 262, 274, change[239], change[262], change[274]);
g275 = gate2(235, 239, 262, 275, change[239], change[262], change[275]);
g276 = gate2(236, 274, 235, 276, change[274], change[235], change[276]);
g277 = gate2(237, 274, 235, 277, change[274], change[235], change[277]);
g278 = gate2(238, 275, 276, 278, change[275], change[276], change[278]);
g279 = gate2(239, 244, 263, 279, change[244], change[263], change[279]);
g280 = gate2(240, 244, 263, 280, change[244], change[263], change[280]);
g281 = gate2(241, 279, 240, 281, change[279], change[240], change[281]);
g282 = gate2(242, 279, 240, 282, change[279], change[240], change[282]);
g283 = gate2(243, 280, 281, 283, change[280], change[281], change[283]);
g284 = gate2(244, 249, 264, 284, change[249], change[264], change[284]);
g285 = gate2(245, 249, 264, 285, change[249], change[264], change[285]);
g286 = gate2(246, 284, 245, 286, change[284], change[245], change[286]);
g287 = gate2(247, 284, 245, 287, change[284], change[245], change[287]);
g288 = gate2(248, 285, 286, 288, change[285], change[286], change[288]);
g289 = gate2(249, 254, 265, 289, change[254], change[265], change[289]);
g290 = gate2(250, 254, 265, 290, change[254], change[265], change[290]);
g291 = gate2(251, 289, 250, 291, change[289], change[250], change[291]);
g292 = gate2(252, 289, 250, 292, change[289], change[250], change[292]);
g293 = gate2(253, 290, 291, 293, change[290], change[291], change[293]);
g294 = gate2(254, 259, 266, 294, change[259], change[266], change[294]);
g295 = gate2(255, 259, 266, 295, change[259], change[266], change[295]);
g296 = gate2(256, 294, 255, 296, change[294], change[255], change[296]);
g297 = gate2(257, 294, 255, 297, change[294], change[255], change[297]);
g298 = gate2(258, 295, 296, 298, change[295], change[296], change[298]);
g299 = gate2(259, 225, 267, 299, change[225], change[267], change[299]);
g300 = gate2(260, 225, 267, 300, change[225], change[267], change[300]);
g301 = gate2(261, 299, 260, 301, change[299], change[260], change[301]);
g302 = gate2(262, 299, 260, 302, change[299], change[260], change[302]);
g303 = gate2(263, 300, 301, 303, change[300], change[301], change[303]);
g304 = gate2(264, 277, 273, POy[8], change[277], change[273], change[304]);
g305 = gate2(265, 277, 273, 305, change[277], change[273], change[305]);
g306 = gate2(266, 282, 278, 306, change[282], change[278], change[306]);
g307 = gate2(267, 282, 278, 307, change[282], change[278], change[307]);
g308 = gate2(268, 306, 305, 308, change[306], change[305], change[308]);
g309 = gate2(269, 306, 305, POy[9], change[306], change[305], change[309]);
g310 = gate2(270, 307, 308, 310, change[307], change[308], change[310]);
g311 = gate2(271, 287, 283, 311, change[287], change[283], change[311]);
g312 = gate2(272, 287, 283, 312, change[287], change[283], change[312]);
g313 = gate2(273, 311, 310, 313, change[311], change[310], change[313]);
g314 = gate2(274, 311, 310, POy[10], change[311], change[310], change[314]);
g315 = gate2(275, 312, 313, 315, change[312], change[313], change[315]);
g316 = gate2(276, 292, 288, 316, change[292], change[288], change[316]);
g317 = gate2(277, 292, 288, 317, change[292], change[288], change[317]);
g318 = gate2(278, 316, 315, 318, change[316], change[315], change[318]);
g319 = gate2(279, 316, 315, POy[11], change[316], change[315], change[319]);
g320 = gate2(280, 317, 318, 320, change[317], change[318], change[320]);
g321 = gate2(281, 297, 293, 321, change[297], change[293], change[321]);
g322 = gate2(282, 297, 293, 322, change[297], change[293], change[322]);
g323 = gate2(283, 321, 320, 323, change[321], change[320], change[323]);
g324 = gate2(284, 321, 320, POy[12], change[321], change[320], change[324]);
g325 = gate2(285, 322, 323, 325, change[322], change[323], change[325]);
g326 = gate2(286, 302, 298, 326, change[302], change[298], change[326]);
g327 = gate2(287, 302, 298, 327, change[302], change[298], change[327]);
g328 = gate2(288, 326, 325, 328, change[326], change[325], change[328]);
g329 = gate2(289, 326, 325, POy[13], change[326], change[325], change[329]);
g330 = gate2(290, 327, 328, 330, change[327], change[328], change[330]);
g331 = gate2(291, 268, 303, 331, change[268], change[303], change[331]);
g332 = gate2(292, PIxy[7], 303, 332, change[7], change[303], change[332]);
g333 = gate2(293, 331, 330, 333, change[331], change[330], change[333]);
g334 = gate2(294, 331, 330, POy[14], change[331], change[330], change[334]);
g335 = gate2(295, 332, 333, POy[15], change[332], change[333], change[335]);

// List one or more processes to be composed into a system.
system
synPri,
mul2A, 
mul2Atb,
ediff,
g16,
g17,
g18,
g19,
g20,
g21,
g22,
g23,
g24,
g25,
g26,
g27,
g28,
g29,
g30,
g31,
g32,
g34,
g36,
g38,
g39,
g40,
g41,
g42,
g43,
g44,
g45,
g46,
g47,
g48,
g49,
g50,
g51,
g52,
g53,
g54,
g59,
g64,
g65,
g69,
g70,
g71,
g72,
g73,
g74,
g75,
g76,
g77,
g78,
g79,
g80,
g81,
g82,
g83,
g84,
g85,
g87,
g88,
g89,
g90,
g91,
g92,
g93,
g94,
g95,
g96,
g97,
g102,
g103,
g107,
g108,
g109,
g110,
g111,
g112,
g113,
g114,
g115,
g116,
g117,
g118,
g119,
g120,
g121,
g122,
g123,
g124,
g125,
g126,
g127,
g128,
g129,
g130,
g131,
g132,
g133,
g134,
g135,
g136,
g137,
g138,
g139,
g140,
g141,
g143,
g145,
g146,
g147,
g148,
g149,
g150,
g151,
g152,
g153,
g154,
g155,
g156,
g157,
g158,
g159,
g160,
g161,
g162,
g163,
g164,
g165,
g166,
g167,
g168,
g169,
g170,
g171,
g172,
g173,
g174,
g175,
g176,
g177,
g178,
g179,
g180,
g181,
g182,
g183,
g184,
g185,
g186,
g187,
g188,
g189,
g190,
g191,
g192,
g193,
g194,
g195,
g196,
g197,
g198,
g199,
g200,
g201,
g202,
g203,
g204,
g205,
g206,
g207,
g208,
g209,
g210,
g211,
g212,
g213,
g214,
g215,
g216,
g217,
g218,
g219,
g220,
g221,
g222,
g223,
g224,
g225,
g226,
g227,
g228,
g229,
g230,
g231,
g232,
g233,
g234,
g235,
g236,
g237,
g238,
g239,
g240,
g241,
g242,
g243,
g244,
g245,
g246,
g247,
g248,
g249,
g250,
g251,
g252,
g253,
g254,
g255,
g256,
g257,
g258,
g259,
g260,
g261,
g262,
g263,
g264,
g265,
g266,
g267,
g268,
g269,
g270,
g271,
g272,
g273,
g274,
g275,
g276,
g277,
g278,
g279,
g280,
g281,
g282,
g283,
g284,
g285,
g286,
g287,
g288,
g289,
g290,
g291,
g292,
g293,
g294,
g295,
g296,
g297,
g298,
g299,
g300,
g301,
g302,
g303,
g304,
g305,
g306,
g307,
g308,
g309,
g310,
g311,
g312,
g313,
g314,
g315,
g316,
g317,
g318,
g319,
g320,
g321,
g322,
g323,
g324,
g325,
g326,
g327,
g328,
g329,
g330,
g331,
g332,
g333,
g334,
g335;
</system>
	<queries>
		<query>
			<formula>E[&lt;=25000; 10] (max:mul2Atb.tcover)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>E[&lt;=350; 100] (max:bitsCovered)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>Pr[&lt;=25000] (&lt;&gt;bitsCovered&gt;14)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=350;1] {bits[0], 2+bits[1], 4+bits[2], 6+bits[3], 8+bits[4], 10+bits[5], 12+bits[6], 14+bits[7], bitsCovered, 16+allCovered}
			</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:22:00 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="bits[0]" type="l" color="0xff0000" encoding="csv">0.0,0.0
350.0,0.0
					</series>
					<series title="2 + bits[1]" type="l" color="0xff9900" encoding="csv">0.0,2.0
128.7075378606096,2.0
128.7075378606096,3.0
190.73981907884396,3.0
190.73981907884396,2.0
350.0,2.0
					</series>
					<series title="4 + bits[2]" type="l" color="0xccff00" encoding="csv">0.0,4.0
350.0,4.0
					</series>
					<series title="6 + bits[3]" type="l" color="0x33ff00" encoding="csv">0.0,6.0
150.54639687961705,6.0
150.54639687961705,7.0
235.56684024752883,7.0
235.56684024752883,6.0
303.1333602423854,6.0
303.1333602423854,7.0
350.0,7.0
					</series>
					<series title="8 + bits[4]" type="l" color="0x00ff66" encoding="csv">0.0,8.0
107.15580153511837,8.0
107.15580153511837,9.0
350.0,9.0
					</series>
					<series title="10 + bits[5]" type="l" color="0x00ffff" encoding="csv">0.0,10.0
282.98751199795674,10.0
282.98751199795674,11.0
323.1333602423854,11.0
323.1333602423854,10.0
350.0,10.0
					</series>
					<series title="12 + bits[6]" type="l" color="0x0066ff" encoding="csv">0.0,12.0
350.0,12.0
					</series>
					<series title="14 + bits[7]" type="l" color="0x3300ff" encoding="csv">0.0,14.0
63.56879812316038,14.0
63.56879812316038,15.0
350.0,15.0
					</series>
					<series title="bitsCovered" type="l" color="0xcc00ff" encoding="csv">0.0,0.0
0.0,1.0
22.857293131528422,1.0
22.857293131528422,2.0
43.56879812316038,2.0
43.56879812316038,3.0
63.56879812316038,3.0
63.56879812316038,4.0
83.56879812316038,4.0
83.56879812316038,5.0
107.15580153511837,5.0
107.15580153511837,6.0
128.7075378606096,6.0
128.7075378606096,7.0
150.54639687961705,7.0
150.54639687961705,8.0
170.73981907884396,8.0
170.73981907884396,9.0
190.73981907884396,9.0
190.73981907884396,10.0
214.96480527804067,10.0
214.96480527804067,11.0
235.56684024752883,11.0
235.56684024752883,12.0
260.1679656419732,12.0
260.1679656419732,13.0
282.98751199795674,13.0
282.98751199795674,14.0
303.1333602423854,14.0
303.1333602423854,15.0
323.1333602423854,15.0
323.1333602423854,16.0
347.9055224151448,16.0
347.9055224151448,17.0
350.0,17.0
					</series>
					<series title="16 + allCovered" type="l" color="0xff0099" encoding="csv">0.0,16.0
350.0,16.0
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>simulate [&lt;=1250;1] {bits[0], 2+bits[1], 4+bits[2], 6+bits[3], 10+bits[4], 12+bits[5], 14+bits[6], 16+bits[7], 20+bits[8], 22+bits[9], 24+bits[10], 26+bits[11], 28+bits[12], 32+difference, out_sum_all_acc, out_sum_all_approx}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=1500;1] {bits[0], 2+bits[1], 4+bits[2], 6+bits[3], 8+bits[4], 10+bits[5], 12+bits[6], 14+bits[7], 20+bits[8], 22+bits[9], 24+bits[10], 26+bits[11], bitsCovered, 20+allCovered, 30+mul2Atb.inSame, 40+mul2Atb.input, 30+mul2Atb.nsame, mul2Atb.rCover, 60+difference*10}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=2500;5] {100*((((100.0*(out_sum_all_acc-out_sum_all_approx))/(100.0*(out_sum_all_acc+1))))), out_sum_all_acc, out_sum_all_approx}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=2000;5] {40+difference, 50+10*err_magn_v, 100*err_magn_r, out_sum_all_acc, out_sum_all_approx, 80+out_sum_all_diff, mul2Atb.rCover, 100*((1+1.0*out_sum_all_acc)/(1+1.0*out_sum_all_approx))}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=4000;20] {out_sum_all_diff}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=400;5] {bits[0], 2+bits[1], 4+bits[2], 6+bits[3], 10+bits[4], 12+bits[5], 14+bits[6], 16+bits[7], 20+bits[8], 22+bits[9], 24+bits[10], 26+bits[11], 30+bits[14], 32+bits[15], 34+bits[16], 36+bits[13], 38+bits[12], 40+difference, 45+diffctrl, 50+outcnt}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>sup: err_magn_v
			</formula>
			<comment>Maximalni rozdil mezi vysledkem presne a priblizne nasobicky (pro stejny vstup)</comment>
		</query>
		<query>
			<formula>E[&lt;=2500; 10] (max:err_magn_v)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>E[&lt;=2500; 10] (max:err_magn_r)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>E[&lt;=25000; 10] (max:out_sum_all_diff)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate [&lt;=5000;200] {bitsCovered, 100*allCovered, mul2Atb.rCover}
			</formula>
			<comment/>
		</query>
		<query>
			<formula>Pr[&lt;=50000] (&lt;&gt;allCovered)
			</formula>
			<comment/>
		</query>
		<query>
			<formula>E[&lt;=2500; 10] (max:dif_count)</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate[&lt;=5000;1] {res_acc}</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:52:19 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="res_acc" type="l" color="0xff0000" encoding="csv">0.0,0.0
42.615620826836675,0.0
42.615620826836675,1.0
62.615620826836675,1.0
62.615620826836675,129.0
82.61562082683668,129.0
82.61562082683668,2193.0
104.7004475002177,2193.0
104.7004475002177,6321.0
127.48233396094292,6321.0
127.48233396094292,6837.0
147.48233396094292,6837.0
147.48233396094292,7095.0
167.48233396094292,7095.0
167.48233396094292,5031.0
187.48233396094292,5031.0
187.48233396094292,4992.0
207.48233396094292,4992.0
207.48233396094292,5148.0
227.48233396094292,5148.0
227.48233396094292,4992.0
252.04838866367936,4992.0
252.04838866367936,0.0
272.04838866367936,0.0
272.04838866367936,624.0
292.6090141944587,624.0
292.6090141944587,780.0
312.6090141944587,780.0
312.6090141944587,2060.0
334.3302900460456,2060.0
334.3302900460456,8652.0
358.15211583127325,8652.0
358.15211583127325,3276.0
378.15211583127325,3276.0
378.15211583127325,780.0
398.15211583127325,780.0
398.15211583127325,624.0
418.15211583127325,624.0
418.15211583127325,3120.0
438.15211583127325,3120.0
438.15211583127325,3760.0
460.07421459036937,3760.0
460.07421459036937,752.0
481.92444501410296,752.0
481.92444501410296,1776.0
505.22207252122246,1776.0
505.22207252122246,1887.0
528.9674407474516,1887.0
528.9674407474516,5439.0
553.9508198493199,5439.0
553.9508198493199,6223.0
573.9508198493199,6223.0
573.9508198493199,12495.0
593.9508198493199,12495.0
593.9508198493199,13515.0
613.9508198493199,13515.0
613.9508198493199,13091.0
635.7263436190734,13091.0
635.7263436190734,12985.0
655.7263436190734,12985.0
655.7263436190734,9065.0
675.7263436190734,9065.0
675.7263436190734,24745.0
698.0358821327283,24745.0
698.0358821327283,16905.0
722.0324755677709,16905.0
722.0324755677709,17395.0
743.0817698194866,17395.0
743.0817698194866,8307.0
763.0817698194866,8307.0
763.0817698194866,17395.0
783.9565894790254,17395.0
783.9565894790254,17150.0
804.19209576587,17150.0
804.19209576587,14910.0
828.3183749343499,14910.0
828.3183749343499,14058.0
848.3183749343499,14058.0
848.3183749343499,13794.0
872.564779424798,13794.0
872.564779424798,13728.0
894.4268175940499,13728.0
894.4268175940499,13936.0
914.4268175940499,13936.0
914.4268175940499,17264.0
938.2666553514548,17264.0
938.2666553514548,3952.0
962.3574685636729,3952.0
962.3574685636729,4560.0
982.3574685636729,4560.0
982.3574685636729,720.0
1002.3574685636729,720.0
1002.3574685636729,723.0
1022.9434317229569,723.0
1022.9434317229569,735.0
1042.9434317229566,735.0
1042.9434317229566,2695.0
1062.9434317229561,2695.0
1062.9434317229561,2717.0
1085.0633007444105,2717.0
1085.0633007444105,1309.0
1108.2719380850685,1309.0
1108.2719380850685,1133.0
1131.4078857598142,1133.0
1131.4078857598142,1030.0
1155.8487094923337,1030.0
1155.8487094923337,7622.0
1180.3740216338454,7622.0
1180.3740216338454,17094.0
1203.0088429579394,17094.0
1203.0088429579394,12358.0
1223.008842957939,12358.0
1223.008842957939,12284.0
1243.0088429579384,12284.0
1243.0088429579384,10956.0
1265.7509501017212,10956.0
1265.7509501017212,11022.0
1285.7509501017212,11022.0
1285.7509501017212,8910.0
1306.692448836937,8910.0
1306.692448836937,9045.0
1326.692448836937,9045.0
1326.692448836937,13365.0
1346.692448836937,13365.0
1346.692448836937,14445.0
1367.0053822895973,14445.0
1367.0053822895973,14310.0
1387.0053822895973,14310.0
1387.0053822895973,14040.0
1407.0053822895973,14040.0
1407.0053822895973,20696.0
1427.3573868814385,20696.0
1427.3573868814385,14040.0
1448.579030939098,14040.0
1448.579030939098,15704.0
1468.579030939098,15704.0
1468.579030939098,16006.0
1492.827214236557,16006.0
1492.827214236557,6342.0
1512.827214236557,6342.0
1512.827214236557,6040.0
1533.0841278051487,6040.0
1533.0841278051487,6644.0
1553.0841278051487,6644.0
1553.0841278051487,6946.0
1573.0841278051487,6946.0
1573.0841278051487,6854.0
1593.0841278051487,6854.0
1593.0841278051487,9798.0
1616.7071210953402,9798.0
1616.7071210953402,11270.0
1636.7071210953402,11270.0
1636.7071210953402,11224.0
1661.6146742824765,11224.0
1661.6146742824765,8280.0
1684.014033186565,8280.0
1684.014033186565,11224.0
1708.3016126516757,11224.0
1708.3016126516757,5336.0
1732.3053510674154,5336.0
1732.3053510674154,5152.0
1756.5719216580685,5152.0
1756.5719216580685,5520.0
1776.5719216580683,5520.0
1776.5719216580683,5640.0
1796.5719216580683,5640.0
1796.5719216580683,5520.0
1816.5719216580683,5520.0
1816.5719216580683,5280.0
1840.2638390038987,5280.0
1840.2638390038987,3872.0
1860.2638390038987,3872.0
1860.2638390038987,9504.0
1882.8621191402697,9504.0
1882.8621191402697,23328.0
1902.8621191402697,23328.0
1902.8621191402697,21600.0
1926.6527338855276,21600.0
1926.6527338855276,20800.0
1947.9827784822164,20800.0
1947.9827784822164,19200.0
1967.9827784822164,19200.0
1967.9827784822164,22400.0
1989.5434713986078,22400.0
1989.5434713986078,21504.0
2010.5926666512607,21504.0
2010.5926666512607,7168.0
2034.9993898177534,7168.0
2034.9993898177534,5120.0
2054.999389817754,5120.0
2054.999389817754,6400.0
2078.0733022851136,6400.0
2078.0733022851136,1280.0
2102.84485037532,1280.0
2102.84485037532,1024.0
2122.84485037532,1024.0
2122.84485037532,3072.0
2144.2292608213797,3072.0
2144.2292608213797,3136.0
2164.229260821379,3136.0
2164.229260821379,3332.0
2184.2292608213784,3332.0
2184.2292608213784,15876.0
2204.2292608213784,15876.0
2204.2292608213784,16524.0
2226.4316834129563,16524.0
2226.4316834129563,3468.0
2247.8706999034316,3468.0
2247.8706999034316,204.0
2267.8706999034307,204.0
2267.8706999034307,140.0
2289.9249759743348,140.0
2289.9249759743348,142.0
2309.924975974334,142.0
2309.924975974334,140.0
2329.924975974333,140.0
2329.924975974333,1260.0
2353.41972929444,1260.0
2353.41972929444,1836.0
2377.3298792653404,1836.0
2377.3298792653404,1800.0
2398.1476767384183,1800.0
2398.1476767384183,1818.0
2421.394974381587,1818.0
2421.394974381587,1746.0
2441.394974381587,1746.0
2441.394974381587,7954.0
2461.3949743815865,7954.0
2461.3949743815865,1746.0
2481.3949743815865,1746.0
2481.3949743815865,2134.0
2505.6284885693985,2134.0
2505.6284885693985,2222.0
2528.67670497372,2222.0
2528.67670497372,2200.0
2548.676704973719,2200.0
2548.676704973719,3000.0
2568.676704973718,3000.0
2568.676704973718,6200.0
2591.3956288809327,6200.0
2591.3956288809327,12600.0
2613.200690185409,12600.0
2613.200690185409,9400.0
2633.200690185409,9400.0
2633.200690185409,9024.0
2657.5951426832858,9024.0
2657.5951426832858,10528.0
2681.22259006476,10528.0
2681.22259006476,10904.0
2704.6655885025157,10904.0
2704.6655885025157,11656.0
2724.6655885025157,11656.0
2724.6655885025157,11844.0
2748.1806960669655,11844.0
2748.1806960669655,11092.0
2768.1806960669655,11092.0
2768.1806960669655,10856.0
2788.8260792338133,10856.0
2788.8260792338133,11592.0
2812.062339455537,11592.0
2812.062339455537,11718.0
2832.062339455537,11718.0
2832.062339455537,11811.0
2855.5464509883345,11811.0
2855.5464509883345,12065.0
2879.474103638235,12065.0
2879.474103638235,11685.0
2900.075849832532,11685.0
2900.075849832532,8645.0
2921.5552462358355,8645.0
2921.5552462358355,8463.0
2941.5552462358355,8463.0
2941.5552462358355,7719.0
2961.5552462358355,7719.0
2961.5552462358355,10375.0
2981.5552462358355,10375.0
2981.5552462358355,26375.0
3001.5552462358355,26375.0
3001.5552462358355,24687.0
3021.5552462358355,24687.0
3021.5552462358355,22815.0
3041.687957041464,22815.0
3041.687957041464,22620.0
3061.687957041464,22620.0
3061.687957041464,22504.0
3081.687957041464,22504.0
3081.687957041464,16296.0
3101.687957041464,16296.0
3101.687957041464,15520.0
3121.687957041464,15520.0
3121.687957041464,40352.0
3142.2736976342603,40352.0
3142.2736976342603,27040.0
3162.2736976342603,27040.0
3162.2736976342603,28704.0
3184.297423913409,28704.0
3184.297423913409,35360.0
3204.297423913409,35360.0
3204.297423913409,13600.0
3224.297423913409,13600.0
3224.297423913409,11040.0
3244.297423913409,11040.0
3244.297423913409,15456.0
3268.3467440295826,15456.0
3268.3467440295826,15732.0
3292.6789573409874,15732.0
3292.6789573409874,11316.0
3317.065842329862,11316.0
3317.065842329862,16564.0
3340.8489640291673,16564.0
3340.8489640291673,13332.0
3360.8489640291664,13332.0
3360.8489640291664,39188.0
3380.93218981655,39188.0
3380.93218981655,45396.0
3400.932189816549,45396.0
3400.932189816549,32980.0
3423.167669335083,32980.0
3423.167669335083,8148.0
3444.4566556451855,8148.0
3444.4566556451855,20564.0
3466.0519992317086,20564.0
3466.0519992317086,20352.0
3486.0519992317086,20352.0
3486.0519992317086,8064.0
3506.255068187743,8064.0
3506.255068187743,6528.0
3529.740469653938,6528.0
3529.740469653938,31104.0
3549.740469653938,31104.0
3549.740469653938,31266.0
3572.511745784751,31266.0
3572.511745784751,33858.0
3594.6825238722013,33858.0
3594.6825238722013,33696.0
3618.5837845216033,33696.0
3618.5837845216033,34528.0
3638.5837845216033,34528.0
3638.5837845216033,35856.0
3662.0643751213197,35856.0
3662.0643751213197,36520.0
3682.0643751213197,36520.0
3682.0643751213197,36686.0
3706.7973451380626,36686.0
3706.7973451380626,38454.0
3727.515526258528,38454.0
3727.515526258528,37062.0
3749.192597182803,37062.0
3749.192597182803,42630.0
3772.718327599772,42630.0
3772.718327599772,44022.0
3792.718327599773,44022.0
3792.718327599773,42630.0
3813.0859936717534,42630.0
3813.0859936717534,31494.0
3833.0859936717543,31494.0
3833.0859936717543,31132.0
3853.085993671755,31132.0
3853.085993671755,30960.0
3873.085993671756,30960.0
3873.085993671756,28208.0
3896.78206613773,28208.0
3896.78206613773,26896.0
3919.6429322258887,26896.0
3919.6429322258887,26240.0
3943.008905461361,26240.0
3943.008905461361,27520.0
3967.126653518087,27520.0
3967.126653518087,30272.0
3990.762571142163,30272.0
3990.762571142163,31648.0
4013.4730678141036,31648.0
4013.4730678141036,32016.0
4033.4730678141036,32016.0
4033.4730678141036,32200.0
4053.4730678141036,32200.0
4053.4730678141036,8648.0
4074.7913554702805,8648.0
4074.7913554702805,8464.0
4094.7913554702814,8464.0
4094.7913554702814,6992.0
4114.791355470282,6992.0
4114.791355470282,6384.0
4139.513339248004,6384.0
4139.513339248004,9072.0
4159.557901411534,9072.0
4159.557901411534,22896.0
4179.557901411534,22896.0
4179.557901411534,21168.0
4199.774004873105,21168.0
4199.774004873105,20736.0
4219.774004873103,20736.0
4219.774004873103,13824.0
4239.774004873103,13824.0
4239.774004873103,13888.0
4260.672529598447,13888.0
4260.672529598447,14756.0
4282.836831566161,14756.0
4282.836831566161,868.0
4306.841799538001,868.0
4306.841799538001,884.0
4328.2591159272715,884.0
4328.2591159272715,880.0
4348.2591159272715,880.0
4348.2591159272715,1100.0
4369.539188796779,1100.0
4369.539188796779,1080.0
4389.539188796777,1080.0
4389.539188796777,1000.0
4413.043224006807,1000.0
4413.043224006807,13800.0
4435.992703189523,13800.0
4435.992703189523,15400.0
4459.148383454268,15400.0
4459.148383454268,15554.0
4479.148383454268,15554.0
4479.148383454268,5698.0
4503.902025498716,5698.0
4503.902025498716,5624.0
4523.902025498716,5624.0
4523.902025498716,5772.0
4543.902025498716,5772.0
4543.902025498716,7020.0
4563.902025498716,7020.0
4563.902025498716,17004.0
4587.753336179184,17004.0
4587.753336179184,16568.0
4607.753336179184,16568.0
4607.753336179184,6840.0
4630.248009146052,6840.0
4630.248009146052,1080.0
4650.248009146052,1080.0
4650.248009146052,984.0
4671.233089722554,984.0
4671.233089722554,656.0
4691.233089722554,656.0
4691.233089722554,3280.0
4711.233089722554,3280.0
4711.233089722554,720.0
4733.554126459966,720.0
4733.554126459966,1040.0
4753.554126459966,1040.0
4753.554126459966,720.0
4773.554126459966,720.0
4773.554126459966,3280.0
4797.197525631887,3280.0
4797.197525631887,13776.0
4817.197525631886,13776.0
4817.197525631886,11088.0
4837.197525631884,11088.0
4837.197525631884,11352.0
4861.137092516201,11352.0
4861.137092516201,12408.0
4883.180907017979,12408.0
4883.180907017979,11352.0
4903.180907017979,11352.0
4903.180907017979,12408.0
4923.180907017979,12408.0
4923.180907017979,16632.0
4943.180907017979,16632.0
4943.180907017979,16884.0
4963.180907017979,16884.0
4963.180907017979,756.0
4983.180907017979,756.0
4983.180907017979,4788.0
5000.0,4788.0
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>simulate[&lt;=5000;1] {res_acc, res_approx}</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:55:32 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="res_acc" type="l" color="0xff0000" encoding="csv">0.0,0.0
83.94959920085967,0.0
83.94959920085967,32.0
103.94959920085967,32.0
103.94959920085967,40.0
128.88468432240188,40.0
128.88468432240188,56.0
148.88468432240188,56.0
148.88468432240188,70.0
170.77892288832922,70.0
170.77892288832922,56.0
190.77892288832922,56.0
190.77892288832922,312.0
210.77892288832922,312.0
210.77892288832922,296.0
232.15844701078717,296.0
232.15844701078717,264.0
252.15844701078717,264.0
252.15844701078717,8.0
272.15844701078714,8.0
272.15844701078714,136.0
297.02345272753143,136.0
297.02345272753143,8840.0
321.42509271713965,8840.0
321.42509271713965,11016.0
341.42509271713965,11016.0
341.42509271713965,10880.0
361.42509271713965,10880.0
361.42509271713965,15232.0
383.4356335625557,15232.0
383.4356335625557,15368.0
408.419669841746,15368.0
408.419669841746,15820.0
428.419669841746,15820.0
428.419669841746,1356.0
450.3581832462029,1356.0
450.3581832462029,1380.0
470.3581832462029,1380.0
470.3581832462029,1428.0
494.4887426919539,1428.0
494.4887426919539,31892.0
515.8411852892257,31892.0
515.8411852892257,31416.0
536.7819681081688,31416.0
536.7819681081688,14520.0
556.7819681081689,14520.0
556.7819681081689,10296.0
581.6391566975476,10296.0
581.6391566975476,10032.0
601.6391566975476,10032.0
601.6391566975476,26928.0
623.380141700382,26928.0
623.380141700382,31152.0
645.9623729643018,31152.0
645.9623729643018,30624.0
670.0901299418365,30624.0
670.0901299418365,30888.0
690.0901299418365,30888.0
690.0901299418365,33000.0
713.9345919753205,33000.0
713.9345919753205,32736.0
733.9345919753205,32736.0
733.9345919753205,24288.0
756.3656261178708,24288.0
756.3656261178708,24420.0
776.3656261178708,24420.0
776.3656261178708,740.0
796.3656261178708,740.0
796.3656261178708,3700.0
820.0354597798591,3700.0
820.0354597798591,4980.0
842.0377937253722,4980.0
842.0377937253722,5229.0
862.0377937253722,5229.0
862.0377937253722,5727.0
882.0377937253722,5727.0
882.0377937253722,7719.0
902.1707297853352,7719.0
902.1707297853352,7221.0
922.1707297853352,7221.0
922.1707297853352,6757.0
944.5831671174308,6757.0
944.5831671174308,6524.0
966.0004979026196,6524.0
966.0004979026196,6972.0
989.4585847803787,6972.0
989.4585847803787,4980.0
1012.0219336585087,4980.0
1012.0219336585087,996.0
1032.0219336585087,996.0
1032.0219336585087,2988.0
1053.8425971894765,2988.0
1053.8425971894765,6972.0
1073.8425971894765,6972.0
1073.8425971894765,38844.0
1093.975968785934,38844.0
1093.975968785934,39342.0
1114.1444239149575,39342.0
1114.1444239149575,34286.0
1134.1444239149575,34286.0
1134.1444239149575,32550.0
1154.6767724192841,32550.0
1154.6767724192841,4774.0
1175.252196073221,4774.0
1175.252196073221,1958.0
1196.7018822007412,1958.0
1196.7018822007412,1782.0
1218.4600547069754,1782.0
1218.4600547069754,1430.0
1241.846840701426,1430.0
1241.846840701426,1474.0
1266.0474149696981,1474.0
1266.0474149696981,1562.0
1286.0474149696981,1562.0
1286.0474149696981,10650.0
1306.0474149696981,10650.0
1306.0474149696981,11850.0
1328.6586673665818,11850.0
1328.6586673665818,10650.0
1351.0549958949935,10650.0
1351.0549958949935,10366.0
1371.888078566238,10366.0
1371.888078566238,10074.0
1391.8880785662375,10074.0
1391.8880785662375,1242.0
1415.7703154509115,1242.0
1415.7703154509115,10074.0
1435.7703154509115,10074.0
1435.7703154509115,28762.0
1455.7703154509115,28762.0
1455.7703154509115,29054.0
1475.7703154509115,29054.0
1475.7703154509115,30222.0
1499.8501642422154,30222.0
1499.8501642422154,29054.0
1519.8501642422154,29054.0
1519.8501642422154,30222.0
1540.6192060246938,30222.0
1540.6192060246938,29808.0
1564.775130971378,29808.0
1564.775130971378,29520.0
1586.7167440096084,29520.0
1586.7167440096084,30340.0
1606.7167440096084,30340.0
1606.7167440096084,27060.0
1626.7167440096084,27060.0
1626.7167440096084,33620.0
1646.7167440096084,33620.0
1646.7167440096084,38868.0
1671.6207019783376,38868.0
1671.6207019783376,28372.0
1691.620701978338,28372.0
1691.620701978338,28718.0
1713.7634592569727,28718.0
1713.7634592569727,30102.0
1733.7634592569727,30102.0
1733.7634592569727,32870.0
1753.7634592569727,32870.0
1753.7634592569727,43942.0
1775.6811559100147,43942.0
1775.6811559100147,11430.0
1797.7653410379417,11430.0
1797.7653410379417,11340.0
1820.0905840937621,11340.0
1820.0905840937621,10980.0
1841.363131295714,10980.0
1841.363131295714,9028.0
1861.363131295714,9028.0
1861.363131295714,40260.0
1881.363131295714,40260.0
1881.363131295714,9028.0
1901.363131295714,9028.0
1901.363131295714,24644.0
1923.558613240277,24644.0
1923.558613240277,55876.0
1947.1191592795376,55876.0
1947.1191592795376,26564.0
1967.1191592795376,26564.0
1967.1191592795376,22900.0
1987.1191592795376,22900.0
1987.1191592795376,15572.0
2007.1191592795376,15572.0
2007.1191592795376,916.0
2027.1191592795376,916.0
2027.1191592795376,4580.0
2051.6578265350277,4580.0
2051.6578265350277,33892.0
2073.8642679043687,33892.0
2073.8642679043687,14948.0
2093.8642679043687,14948.0
2093.8642679043687,15049.0
2116.876670597644,15049.0
2116.876670597644,18281.0
2136.876670597644,18281.0
2136.876670597644,21177.0
2156.876670597644,21177.0
2156.876670597644,6201.0
2179.866017128964,6201.0
2179.866017128964,5353.0
2199.866017128964,5353.0
2199.866017128964,2121.0
2221.693535117063,2121.0
2221.693535117063,2457.0
2246.593282305464,2457.0
2246.593282305464,2625.0
2266.5935015574246,2625.0
2266.5935015574246,2875.0
2286.5935015574246,2875.0
2286.5935015574246,2139.0
2306.743113675682,2139.0
2306.743113675682,2047.0
2326.743113675682,2047.0
2326.743113675682,13439.0
2346.743113675682,13439.0
2346.743113675682,13261.0
2366.743113675682,13261.0
2366.743113675682,13559.0
2386.743113675682,13559.0
2386.743113675682,32631.0
2406.743113675682,32631.0
2406.743113675682,37399.0
2426.743113675682,37399.0
2426.743113675682,36395.0
2447.1154715808257,36395.0
2447.1154715808257,36975.0
2467.1154715808257,36975.0
2467.1154715808257,32895.0
2487.1154715808257,32895.0
2487.1154715808257,30831.0
2511.5182555758543,30831.0
2511.5182555758543,239.0
2532.8042357427216,239.0
2532.8042357427216,7887.0
2552.8042357427216,7887.0
2552.8042357427216,3663.0
2572.8042357427216,3663.0
2572.8042357427216,111.0
2593.2070216991156,111.0
2593.2070216991156,999.0
2613.2070216991156,999.0
2613.2070216991156,111.0
2637.6023494319347,111.0
2637.6023494319347,103.0
2657.9620590114323,103.0
2657.9620590114323,102.0
2680.1945533284274,102.0
2680.1945533284274,230.0
2703.5111494522316,230.0
2703.5111494522316,166.0
2726.5654775392504,166.0
2726.5654775392504,230.0
2746.5654775392504,230.0
2746.5654775392504,690.0
2766.5654775392504,690.0
2766.5654775392504,714.0
2790.2938958613377,714.0
2790.2938958613377,2618.0
2810.2938958613377,2618.0
2810.2938958613377,2794.0
2832.429875037138,2794.0
2832.429875037138,2750.0
2852.429875037138,2750.0
2852.429875037138,2500.0
2874.6453870532523,2500.0
2874.6453870532523,2510.0
2894.6453870532523,2510.0
2894.6453870532523,502.0
2914.6453870532523,502.0
2914.6453870532523,4518.0
2934.6453870532523,4518.0
2934.6453870532523,4374.0
2954.6453870532523,4374.0
2954.6453870532523,2070.0
2974.6453870532523,2070.0
2974.6453870532523,4374.0
2994.6453870532523,4374.0
2994.6453870532523,3798.0
3017.777563836654,3798.0
3017.777563836654,4374.0
3042.178912845203,4374.0
3042.178912845203,3888.0
3062.56413773606,3888.0
3062.56413773606,19440.0
3085.4739219912185,19440.0
3085.4739219912185,18160.0
3108.0620252803024,18160.0
3108.0620252803024,7920.0
3129.0812185007203,7920.0
3129.0812185007203,8560.0
3149.0812185007203,8560.0
3149.0812185007203,18800.0
3170.4087665231023,18800.0
3170.4087665231023,3760.0
3192.374522285234,3760.0
3192.374522285234,3824.0
3212.374522285235,3824.0
3212.374522285235,1776.0
3232.374522285236,1776.0
3232.374522285236,752.0
3252.3745222852363,752.0
3252.3745222852363,688.0
3272.3745222852363,688.0
3272.3745222852363,2736.0
3292.8576576043183,2736.0
3292.8576576043183,2907.0
3312.8576576043183,2907.0
3312.8576576043183,3249.0
3333.5678699434998,3249.0
3333.5678699434998,4617.0
3356.208554389587,4617.0
3356.208554389587,4401.0
3376.208554389587,4401.0
3376.208554389587,1793.0
3398.1894655825367,1793.0
3398.1894655825367,22657.0
3418.1894655825367,22657.0
3418.1894655825367,25265.0
3438.1894655825367,25265.0
3438.1894655825367,35697.0
3461.896684140366,35697.0
3461.896684140366,34393.0
3481.896684140366,34393.0
3481.896684140366,35045.0
3501.896684140366,35045.0
3501.896684140366,34830.0
3526.429125932963,34830.0
3526.429125932963,40014.0
3548.2031305724377,40014.0
3548.2031305724377,39520.0
3570.0032304852357,39520.0
3570.0032304852357,41496.0
3590.0032304852357,41496.0
3590.0032304852357,9880.0
3613.3829964087076,9880.0
3613.3829964087076,9720.0
3636.612416165785,9720.0
3636.612416165785,13608.0
3657.115798687933,13608.0
3657.115798687933,12712.0
3677.115798687932,12712.0
3677.115798687932,13620.0
3700.979260633813,13620.0
3700.979260633813,5940.0
3725.932917110195,5940.0
3725.932917110195,5820.0
3749.308981755557,5820.0
3749.308981755557,12028.0
3769.308981755556,12028.0
3769.308981755556,8924.0
3789.308981755555,8924.0
3789.308981755555,2716.0
3813.9323363769718,2716.0
3813.9323363769718,6300.0
3833.9323363769718,6300.0
3833.9323363769718,13500.0
3853.9323363769718,13500.0
3853.9323363769718,42300.0
3875.3778807821136,42300.0
3875.3778807821136,43052.0
3895.3778807821136,43052.0
3895.3778807821136,44556.0
3915.3778807821136,44556.0
3915.3778807821136,43804.0
3935.3778807821136,43804.0
3935.3778807821136,42872.0
3960.1331264092382,42872.0
3960.1331264092382,43608.0
3980.1331264092373,43608.0
3980.1331264092373,58776.0
4000.1331264092364,58776.0
4000.1331264092364,50840.0
4020.1331264092355,50840.0
4020.1331264092355,51045.0
4040.1331264092346,51045.0
4040.1331264092346,35109.0
4061.6728916459,35109.0
4061.6728916459,26085.0
4081.6728916459,26085.0
4081.6728916459,25944.0
4104.739133184027,25944.0
4104.739133184027,25760.0
4124.739133184027,25760.0
4124.739133184027,26040.0
4148.7214280087,26040.0
4148.7214280087,37944.0
4171.0314759106595,37944.0
4171.0314759106595,38316.0
4195.107532492256,38316.0
4195.107532492256,38502.0
4216.453587299328,38502.0
4216.453587299328,14694.0
4240.958519594092,14694.0
4240.958519594092,13430.0
4262.789117608313,13430.0
4262.789117608313,18870.0
4283.00726192128,18870.0
4283.00726192128,18981.0
4304.957642592656,18981.0
4304.957642592656,18297.0
4324.957642592656,18297.0
4324.957642592656,7353.0
4348.760325145478,7353.0
4348.760325145478,29241.0
4368.854542667315,29241.0
4368.854542667315,7353.0
4388.854542667315,7353.0
4388.854542667315,1881.0
4409.669674119716,1881.0
4409.669674119716,1793.0
4429.669674119716,1793.0
4429.669674119716,7009.0
4449.669674119716,7009.0
4449.669674119716,5633.0
4471.762729807459,5633.0
4471.762729807459,14017.0
4491.762729807459,14017.0
4491.762729807459,14873.0
4516.6783750574705,14873.0
4516.6783750574705,18297.0
4537.065210276574,18297.0
4537.065210276574,17441.0
4557.065210276574,17441.0
4557.065210276574,17334.0
4581.518926895508,17334.0
4581.518926895508,17441.0
4603.218188446228,17441.0
4603.218188446228,18297.0
4623.218188446228,18297.0
4623.218188446228,25145.0
4647.107895307613,25145.0
4647.107895307613,21721.0
4667.107895307615,21721.0
4667.107895307615,14873.0
4687.107895307617,14873.0
4687.107895307617,14766.0
4707.40185461813,14766.0
4707.40185461813,15194.0
4730.515916939969,15194.0
4730.515916939969,14766.0
4755.320004260023,14766.0
4755.320004260023,15318.0
4780.221642490115,15318.0
4780.221642490115,14430.0
4800.221642490117,14430.0
4800.221642490117,16206.0
4821.785623884069,16206.0
4821.785623884069,15622.0
4841.921068740783,15622.0
4841.921068740783,15476.0
4861.921068740783,15476.0
4861.921068740783,18868.0
4883.927875057569,18868.0
4883.927875057569,18512.0
4908.692865812036,18512.0
4908.692865812036,19344.0
4932.305790537702,19344.0
4932.305790537702,18512.0
4952.305790537704,18512.0
4952.305790537704,17088.0
4973.997119664591,17088.0
4973.997119664591,16896.0
4993.997119664591,16896.0
4993.997119664591,4608.0
5000.0,4608.0
					</series>
					<series title="res_approx" type="l" color="0x00ffff" encoding="csv">0.0,0.0
128.88468432240188,0.0
128.88468432240188,264.0
148.88468432240188,264.0
148.88468432240188,33088.0
170.77892288832922,33088.0
170.77892288832922,1048.0
190.77892288832922,1048.0
190.77892288832922,282.0
210.77892288832922,282.0
210.77892288832922,58.0
232.15844701078717,58.0
232.15844701078717,32810.0
252.15844701078717,32810.0
252.15844701078717,56.0
272.15844701078714,56.0
272.15844701078714,40.0
297.02345272753143,40.0
297.02345272753143,124.0
321.42509271713965,124.0
321.42509271713965,8360.0
341.42509271713965,8360.0
341.42509271713965,8320.0
361.42509271713965,8320.0
361.42509271713965,132.0
383.4356335625557,132.0
383.4356335625557,4120.0
408.419669841746,4120.0
408.419669841746,326.0
428.419669841746,326.0
428.419669841746,4478.0
450.3581832462029,4478.0
450.3581832462029,5150.0
470.3581832462029,5150.0
470.3581832462029,5148.0
494.4887426919539,5148.0
494.4887426919539,5404.0
515.8411852892257,5404.0
515.8411852892257,21516.0
536.7819681081688,21516.0
536.7819681081688,22056.0
556.7819681081689,22056.0
556.7819681081689,5136.0
581.6391566975476,5136.0
581.6391566975476,2344.0
601.6391566975476,2344.0
601.6391566975476,6514.0
623.380141700382,6514.0
623.380141700382,16660.0
645.9623729643018,16660.0
645.9623729643018,17704.0
670.0901299418365,17704.0
670.0901299418365,3680.0
690.0901299418365,3680.0
690.0901299418365,5492.0
713.9345919753205,5492.0
713.9345919753205,4364.0
733.9345919753205,4364.0
733.9345919753205,13396.0
756.3656261178708,13396.0
756.3656261178708,18200.0
776.3656261178708,18200.0
776.3656261178708,22100.0
796.3656261178708,22100.0
796.3656261178708,16644.0
820.0354597798591,16644.0
820.0354597798591,590.0
842.0377937253722,590.0
842.0377937253722,1301.0
862.0377937253722,1301.0
862.0377937253722,19995.0
882.0377937253722,19995.0
882.0377937253722,22079.0
902.1707297853352,22079.0
902.1707297853352,4413.0
922.1707297853352,4413.0
922.1707297853352,21817.0
944.5831671174308,21817.0
944.5831671174308,17724.0
966.0004979026196,17724.0
966.0004979026196,22174.0
989.4585847803787,22174.0
989.4585847803787,20492.0
1012.0219336585087,20492.0
1012.0219336585087,16486.0
1032.0219336585087,16486.0
1032.0219336585087,24438.0
1053.8425971894765,24438.0
1053.8425971894765,23368.0
1073.8425971894765,23368.0
1073.8425971894765,20556.0
1093.975968785934,20556.0
1093.975968785934,21614.0
1114.1444239149575,21614.0
1114.1444239149575,17482.0
1134.1444239149575,17482.0
1134.1444239149575,37306.0
1154.6767724192841,37306.0
1154.6767724192841,20586.0
1175.252196073221,20586.0
1175.252196073221,20578.0
1196.7018822007412,20578.0
1196.7018822007412,20742.0
1218.4600547069754,20742.0
1218.4600547069754,21862.0
1241.846840701426,21862.0
1241.846840701426,20582.0
1266.0474149696981,20582.0
1266.0474149696981,1086.0
1286.0474149696981,1086.0
1286.0474149696981,2686.0
1306.0474149696981,2686.0
1306.0474149696981,21534.0
1328.6586673665818,21534.0
1328.6586673665818,16442.0
1351.0549958949935,16442.0
1351.0549958949935,4222.0
1371.888078566238,4222.0
1371.888078566238,2330.0
1391.8880785662375,2330.0
1391.8880785662375,1146.0
1415.7703154509115,1146.0
1415.7703154509115,1054.0
1435.7703154509115,1054.0
1435.7703154509115,1178.0
1455.7703154509115,1178.0
1455.7703154509115,3390.0
1475.7703154509115,3390.0
1475.7703154509115,62.0
1499.8501642422154,62.0
1499.8501642422154,126.0
1519.8501642422154,126.0
1519.8501642422154,20606.0
1540.6192060246938,20606.0
1540.6192060246938,21772.0
1564.775130971378,21772.0
1564.775130971378,28736.0
1586.7167440096084,28736.0
1586.7167440096084,21572.0
1606.7167440096084,21572.0
1606.7167440096084,28972.0
1626.7167440096084,28972.0
1626.7167440096084,20752.0
1646.7167440096084,20752.0
1646.7167440096084,21598.0
1671.6207019783376,21598.0
1671.6207019783376,4124.0
1691.620701978338,4124.0
1691.620701978338,53334.0
1713.7634592569727,53334.0
1713.7634592569727,29982.0
1733.7634592569727,29982.0
1733.7634592569727,30554.0
1753.7634592569727,30554.0
1753.7634592569727,17706.0
1775.6811559100147,17706.0
1775.6811559100147,23166.0
1797.7653410379417,23166.0
1797.7653410379417,25724.0
1820.0905840937621,25724.0
1820.0905840937621,20588.0
1841.363131295714,20588.0
1841.363131295714,17766.0
1861.363131295714,17766.0
1861.363131295714,16420.0
1881.363131295714,16420.0
1881.363131295714,18470.0
1901.363131295714,18470.0
1901.363131295714,2068.0
1923.558613240277,2068.0
1923.558613240277,21540.0
1947.1191592795376,21540.0
1947.1191592795376,48246.0
1967.1191592795376,48246.0
1967.1191592795376,50734.0
1987.1191592795376,50734.0
1987.1191592795376,16618.0
2007.1191592795376,16618.0
2007.1191592795376,25058.0
2027.1191592795376,25058.0
2027.1191592795376,20804.0
2051.6578265350277,20804.0
2051.6578265350277,20748.0
2073.8642679043687,20748.0
2073.8642679043687,21216.0
2093.8642679043687,21216.0
2093.8642679043687,7637.0
2116.876670597644,7637.0
2116.876670597644,20821.0
2136.876670597644,20821.0
2136.876670597644,30581.0
2156.876670597644,30581.0
2156.876670597644,18269.0
2179.866017128964,18269.0
2179.866017128964,17677.0
2199.866017128964,17677.0
2199.866017128964,24589.0
2221.693535117063,24589.0
2221.693535117063,21569.0
2246.593282305464,21569.0
2246.593282305464,20533.0
2266.5935015574246,20533.0
2266.5935015574246,20191.0
2286.5935015574246,20191.0
2286.5935015574246,411.0
2306.743113675682,411.0
2306.743113675682,16795.0
2326.743113675682,16795.0
2326.743113675682,21375.0
2346.743113675682,21375.0
2346.743113675682,16507.0
2366.743113675682,16507.0
2366.743113675682,19839.0
2386.743113675682,19839.0
2386.743113675682,22011.0
2406.743113675682,22011.0
2406.743113675682,17535.0
2426.743113675682,17535.0
2426.743113675682,13663.0
2447.1154715808257,13663.0
2447.1154715808257,4415.0
2467.1154715808257,4415.0
2467.1154715808257,11743.0
2487.1154715808257,11743.0
2487.1154715808257,7647.0
2511.5182555758543,7647.0
2511.5182555758543,38495.0
2532.8042357427216,38495.0
2532.8042357427216,17791.0
2552.8042357427216,17791.0
2552.8042357427216,4415.0
2572.8042357427216,4415.0
2572.8042357427216,1343.0
2593.2070216991156,1343.0
2593.2070216991156,1151.0
2613.2070216991156,1151.0
2613.2070216991156,1343.0
2637.6023494319347,1343.0
2637.6023494319347,3119.0
2657.9620590114323,3119.0
2657.9620590114323,1062.0
2680.1945533284274,1062.0
2680.1945533284274,1318.0
2703.5111494522316,1318.0
2703.5111494522316,294.0
2726.5654775392504,294.0
2726.5654775392504,4390.0
2746.5654775392504,4390.0
2746.5654775392504,6438.0
2766.5654775392504,6438.0
2766.5654775392504,9558.0
2790.2938958613377,9558.0
2790.2938958613377,318.0
2810.2938958613377,318.0
2810.2938958613377,190.0
2832.429875037138,190.0
2832.429875037138,8382.0
2852.429875037138,8382.0
2852.429875037138,44.0
2874.6453870532523,44.0
2874.6453870532523,1406.0
2894.6453870532523,1406.0
2894.6453870532523,1166.0
2914.6453870532523,1166.0
2914.6453870532523,4934.0
2934.6453870532523,4934.0
2934.6453870532523,1078.0
2954.6453870532523,1078.0
2954.6453870532523,5614.0
2974.6453870532523,5614.0
2974.6453870532523,1350.0
2994.6453870532523,1350.0
2994.6453870532523,6454.0
3017.777563836654,6454.0
3017.777563836654,1326.0
3042.178912845203,1326.0
3042.178912845203,1024.0
3062.56413773606,1024.0
3062.56413773606,1280.0
3085.4739219912185,1280.0
3085.4739219912185,128.0
3108.0620252803024,128.0
3108.0620252803024,9536.0
3129.0812185007203,9536.0
3129.0812185007203,17472.0
3149.0812185007203,17472.0
3149.0812185007203,7476.0
3170.4087665231023,7476.0
3170.4087665231023,1088.0
3192.374522285234,1088.0
3192.374522285234,7424.0
3212.374522285235,7424.0
3212.374522285235,7476.0
3232.374522285236,7476.0
3232.374522285236,7244.0
3252.3745222852363,7244.0
3252.3745222852363,352.0
3272.3745222852363,352.0
3272.3745222852363,4400.0
3292.8576576043183,4400.0
3292.8576576043183,4319.0
3312.8576576043183,4319.0
3312.8576576043183,1215.0
3333.5678699434998,1215.0
3333.5678699434998,5503.0
3356.208554389587,5503.0
3356.208554389587,363.0
3376.208554389587,363.0
3376.208554389587,107.0
3398.1894655825367,107.0
3398.1894655825367,303.0
3418.1894655825367,303.0
3418.1894655825367,111.0
3438.1894655825367,111.0
3438.1894655825367,17615.0
3461.896684140366,17615.0
3461.896684140366,1349.0
3481.896684140366,1349.0
3481.896684140366,17669.0
3501.896684140366,17669.0
3501.896684140366,5478.0
3526.429125932963,5478.0
3526.429125932963,36470.0
3548.2031305724377,36470.0
3548.2031305724377,33864.0
3570.0032304852357,33864.0
3570.0032304852357,33880.0
3590.0032304852357,33880.0
3590.0032304852357,34392.0
3613.3829964087076,34392.0
3613.3829964087076,6264.0
3636.612416165785,6264.0
3636.612416165785,6136.0
3657.115798687933,6136.0
3657.115798687933,664.0
3677.115798687932,664.0
3677.115798687932,5918.0
3700.979260633813,5918.0
3700.979260633813,1740.0
3725.932917110195,1740.0
3725.932917110195,92.0
3749.308981755557,92.0
3749.308981755557,6652.0
3769.308981755556,6652.0
3769.308981755556,7100.0
3789.308981755555,7100.0
3789.308981755555,4108.0
3813.9323363769718,4108.0
3813.9323363769718,4356.0
3833.9323363769718,4356.0
3833.9323363769718,15004.0
3853.9323363769718,15004.0
3853.9323363769718,6732.0
3875.3778807821136,6732.0
3875.3778807821136,276.0
3895.3778807821136,276.0
3895.3778807821136,92.0
3915.3778807821136,92.0
3915.3778807821136,4220.0
3935.3778807821136,4220.0
3935.3778807821136,33916.0
3960.1331264092382,33916.0
3960.1331264092382,42364.0
3980.1331264092373,42364.0
3980.1331264092373,42108.0
4000.1331264092364,42108.0
4000.1331264092364,37980.0
4020.1331264092355,37980.0
4020.1331264092355,52829.0
4040.1331264092346,52829.0
4040.1331264092346,59839.0
4061.6728916459,59839.0
4061.6728916459,27005.0
4081.6728916459,27005.0
4081.6728916459,32856.0
4104.739133184027,32856.0
4104.739133184027,1048.0
4124.739133184027,1048.0
4124.739133184027,33050.0
4148.7214280087,33050.0
4148.7214280087,1336.0
4171.0314759106595,1336.0
4171.0314759106595,27230.0
4195.107532492256,27230.0
4195.107532492256,14014.0
4216.453587299328,14014.0
4216.453587299328,38558.0
4240.958519594092,38558.0
4240.958519594092,350.0
4262.789117608313,350.0
4262.789117608313,4574.0
4283.00726192128,4574.0
4283.00726192128,16701.0
4304.957642592656,16701.0
4304.957642592656,21599.0
4324.957642592656,21599.0
4324.957642592656,4959.0
4348.760325145478,4959.0
4348.760325145478,5181.0
4368.854542667315,5181.0
4368.854542667315,37983.0
4388.854542667315,37983.0
4388.854542667315,4191.0
4409.669674119716,4191.0
4409.669674119716,1151.0
4429.669674119716,1151.0
4429.669674119716,2223.0
4449.669674119716,2223.0
4449.669674119716,487.0
4471.762729807459,487.0
4471.762729807459,7263.0
4491.762729807459,7263.0
4491.762729807459,4509.0
4516.6783750574705,4509.0
4516.6783750574705,15743.0
4537.065210276574,15743.0
4537.065210276574,7519.0
4557.065210276574,7519.0
4557.065210276574,4366.0
4581.518926895508,4366.0
4581.518926895508,7537.0
4603.218188446228,7537.0
4603.218188446228,6175.0
4623.218188446228,6175.0
4623.218188446228,5599.0
4647.107895307613,5599.0
4647.107895307613,12415.0
4667.107895307615,12415.0
4667.107895307615,7679.0
4687.107895307617,7679.0
4687.107895307617,5486.0
4707.40185461813,5486.0
4707.40185461813,17102.0
4730.515916939969,17102.0
4730.515916939969,830.0
4755.320004260023,830.0
4755.320004260023,4334.0
4780.221642490115,4334.0
4780.221642490115,6550.0
4800.221642490117,6550.0
4800.221642490117,4414.0
4821.785623884069,4414.0
4821.785623884069,5230.0
4841.921068740783,5230.0
4841.921068740783,1124.0
4861.921068740783,1124.0
4861.921068740783,10774.0
4883.927875057569,10774.0
4883.927875057569,1312.0
4908.692865812036,1312.0
4908.692865812036,12800.0
4932.305790537702,12800.0
4932.305790537702,1696.0
4952.305790537704,1696.0
4952.305790537704,9472.0
4973.997119664591,9472.0
4973.997119664591,292.0
4993.997119664591,292.0
4993.997119664591,4132.0
5000.0,4132.0
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>simulate[&lt;=5000;1] {out_sum_all_acc, out_sum_all_approx}</formula>
			<comment>out_sum_all_acc - out_sum_all_approx</comment>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:47:56 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="out_sum_all_acc" type="l" color="0xff0000" encoding="csv">0.0,0.0
44.06472547445446,0.0
44.06472547445446,2.0
66.61105333361775,2.0
66.61105333361775,8.0
86.61105333361775,8.0
86.61105333361775,46.0
107.66735129407607,46.0
107.66735129407607,2516.0
127.66735129407607,2516.0
127.66735129407607,13306.0
147.66735129407607,13306.0
147.66735129407607,23836.0
167.66735129407607,23836.0
167.66735129407607,39550.0
188.73317430960014,39550.0
188.73317430960014,55588.0
212.7863919188598,55588.0
212.7863919188598,71464.0
234.48367424205875,71464.0
234.48367424205875,74796.0
254.48367424205875,74796.0
254.48367424205875,77040.0
274.4836742420587,77040.0
274.4836742420587,80372.0
294.4836742420587,80372.0
294.4836742420587,83840.0
315.791428194046,83840.0
315.791428194046,85132.0
335.791428194046,85132.0
335.791428194046,88600.0
357.5920895348675,88600.0
357.5920895348675,105124.0
377.5920895348675,105124.0
377.5920895348675,108592.0
398.6901927868742,108592.0
398.6901927868742,112162.0
418.6901927868742,112162.0
418.6901927868742,116292.0
443.6117475673943,116292.0
443.6117475673943,118182.0
463.6117475673943,118182.0
463.6117475673943,126984.0
483.6117475673943,126984.0
483.6117475673943,130570.0
506.60978784182356,130570.0
506.60978784182356,135564.0
526.6097878418236,135564.0
526.6097878418236,139854.0
546.6097878418236,139854.0
546.6097878418236,144320.0
566.6097878418236,144320.0
566.6097878418236,147378.0
587.5438823525633,147378.0
587.5438823525633,150788.0
607.5438823525633,150788.0
607.5438823525633,154154.0
631.0907468616801,154154.0
631.0907468616801,177104.0
655.7790507251985,177104.0
655.7790507251985,199748.0
676.2421958361875,199748.0
676.2421958361875,227128.0
700.4186370206269,227128.0
700.4186370206269,251548.0
723.204535828623,251548.0
723.204535828623,281888.0
743.204535828623,281888.0
743.204535828623,312556.0
763.5656702094236,312556.0
763.5656702094236,340600.0
783.5656702094236,340600.0
783.5656702094236,368316.0
805.8829656535,368316.0
805.8829656535,397384.0
825.8829656534998,397384.0
825.8829656534998,426621.0
847.637014896502,426621.0
847.637014896502,455685.0
867.6370148965023,455685.0
867.6370148965023,495821.0
887.6370148965023,495821.0
887.6370148965023,550805.0
907.6370148965023,550805.0
907.6370148965023,575453.0
927.6370148965023,575453.0
927.6370148965023,600309.0
947.8676115266378,600309.0
947.8676115266378,624333.0
967.8676115266378,624333.0
967.8676115266378,648819.0
987.8676115266378,648819.0
987.8676115266378,675001.0
1007.8676115266378,675001.0
1007.8676115266378,701430.0
1032.1726033381517,701430.0
1032.1726033381517,727612.0
1052.1726033381517,727612.0
1052.1726033381517,740226.0
1075.1821428990322,740226.0
1075.1821428990322,752734.0
1096.057192118499,752734.0
1096.057192118499,761850.0
1116.1529571387316,761850.0
1116.1529571387316,772342.0
1139.573454018653,772342.0
1139.573454018653,782346.0
1159.573454018653,782346.0
1159.573454018653,792472.0
1179.573454018653,792472.0
1179.573454018653,803574.0
1203.2935991603329,803574.0
1203.2935991603329,815164.0
1223.2935991603329,815164.0
1223.2935991603329,842370.0
1243.2935991603329,842370.0
1243.2935991603329,853960.0
1263.2935991603329,853960.0
1263.2935991603329,863598.0
1283.2935991603329,863598.0
1283.2935991603329,871972.0
1308.2351433173799,871972.0
1308.2351433173799,881610.0
1328.2351433173803,881610.0
1328.2351433173803,890616.0
1348.2351433173808,890616.0
1348.2351433173808,899394.0
1368.2351433173812,899394.0
1368.2351433173812,907716.0
1388.2958798264212,907716.0
1388.2958798264212,916266.0
1409.7529480306025,916266.0
1409.7529480306025,924891.0
1434.074708262697,924891.0
1434.074708262697,933286.0
1454.0747082626974,933286.0
1454.0747082626974,940761.0
1474.0747082626979,940761.0
1474.0747082626979,951916.0
1494.0747082626979,951916.0
1494.0747082626979,963301.0
1514.0747082626979,963301.0
1514.0747082626979,975606.0
1535.006976460346,975606.0
1535.006976460346,1001607.0
1555.006976460346,1001607.0
1555.006976460346,1028036.0
1575.006976460346,1028036.0
1575.006976460346,1055321.0
1595.006976460346,1055321.0
1595.006976460346,1115246.0
1617.1318378599892,1115246.0
1617.1318378599892,1145091.0
1637.1318378599892,1145091.0
1637.1318378599892,1159896.0
1657.1318378599892,1159896.0
1657.1318378599892,1174197.0
1677.1318378599892,1174197.0
1677.1318378599892,1188044.0
1699.952102835936,1188044.0
1699.952102835936,1202867.0
1719.952102835936,1202867.0
1719.952102835936,1213786.0
1740.4629071759466,1213786.0
1740.4629071759466,1247617.0
1763.3577736948557,1247617.0
1763.3577736948557,1281806.0
1783.3577736948557,1281806.0
1783.3577736948557,1316759.0
1804.5720553285848,1316759.0
1804.5720553285848,1350948.0
1824.5720553285848,1350948.0
1824.5720553285848,1384421.0
1844.5720553285848,1384421.0
1844.5720553285848,1416462.0
1864.5720553285848,1416462.0
1864.5720553285848,1442775.0
1884.5720553285848,1442775.0
1884.5720553285848,1469804.0
1904.5720553285848,1469804.0
1904.5720553285848,1498265.0
1927.991628976719,1498265.0
1927.991628976719,1521638.0
1947.991628976719,1521638.0
1947.991628976719,1544864.0
1967.991628976719,1544864.0
1967.991628976719,1573146.0
1987.991628976719,1573146.0
1987.991628976719,1598900.0
2007.991628976719,1598900.0
2007.991628976719,1624328.0
2027.991628976719,1624328.0
2027.991628976719,1647148.0
2048.625393403176,1647148.0
2048.625393403176,1675184.0
2068.625393403176,1675184.0
2068.625393403176,1697716.0
2088.625393403176,1697716.0
2088.625393403176,1731256.0
2110.2870617357025,1731256.0
2110.2870617357025,1764991.0
2130.2870617357025,1764991.0
2130.2870617357025,1798531.0
2150.2870617357025,1798531.0
2150.2870617357025,1831899.0
2174.9632665088343,1831899.0
2174.9632665088343,1865439.0
2197.386353966262,1865439.0
2197.386353966262,1892739.0
2217.386353966262,1892739.0
2217.386353966262,1902119.0
2237.386353966262,1902119.0
2237.386353966262,1912619.0
2257.386353966262,1912619.0
2257.386353966262,1923194.0
2281.8829344957144,1923194.0
2281.8829344957144,1924745.0
2302.7892444887207,1924745.0
2302.7892444887207,1926648.0
2325.0079223475695,1926648.0
2325.0079223475695,1934087.0
2346.0237026956675,1934087.0
2346.0237026956675,1936022.0
2366.0237026956665,1936022.0
2366.0237026956665,1940709.0
2389.7602467022243,1940709.0
2389.7602467022243,1941908.0
2409.7602467022243,1941908.0
2409.7602467022243,1943129.0
2429.7602467022243,1943129.0
2429.7602467022243,1944526.0
2449.7602467022243,1944526.0
2449.7602467022243,1945912.0
2469.7602467022243,1945912.0
2469.7602467022243,1947210.0
2492.6830049788823,1947210.0
2492.6830049788823,1947564.0
2512.683004978883,1947564.0
2512.683004978883,1948302.0
2537.1791618041766,1948302.0
2537.1791618041766,1949028.0
2561.6552939753324,1949028.0
2561.6552939753324,1965242.0
2582.7059083690815,1965242.0
2582.7059083690815,1981724.0
2602.7059083690815,1981724.0
2602.7059083690815,1998273.0
2625.732893975493,1998273.0
2625.732893975493,2014328.0
2646.557817964623,2014328.0
2646.557817964623,2029343.0
2666.557817964623,2029343.0
2666.557817964623,2048054.0
2686.557817964623,2048054.0
2686.557817964623,2067413.0
2706.557817964623,2067413.0
2706.557817964623,2094420.0
2726.557817964623,2094420.0
2726.557817964623,2121905.0
2746.557817964623,2121905.0
2746.557817964623,2149151.0
2766.557817964623,2149151.0
2766.557817964623,2172749.0
2786.557817964623,2172749.0
2786.557817964623,2195933.0
2806.557817964623,2195933.0
2806.557817964623,2218893.0
2826.557817964623,2218893.0
2826.557817964623,2243645.0
2846.886921457755,2243645.0
2846.886921457755,2269281.0
2868.225293408888,2269281.0
2868.225293408888,2298629.0
2888.225293408888,2298629.0
2888.225293408888,2328230.0
2908.225293408888,2328230.0
2908.225293408888,2357714.0
2928.225293408888,2357714.0
2928.225293408888,2386946.0
2948.225293408888,2386946.0
2948.225293408888,2416294.0
2968.225293408888,2416294.0
2968.225293408888,2438218.0
2988.225293408888,2438218.0
2988.225293408888,2458286.0
3008.8281660075713,2458286.0
3008.8281660075713,2474642.0
3028.8281660075713,2474642.0
3028.8281660075713,2476150.0
3048.8281660075713,2476150.0
3048.8281660075713,2477684.0
3071.807628881926,2477684.0
3071.807628881926,2479192.0
3091.807628881926,2479192.0
3091.807628881926,2482364.0
3116.458336374764,2482364.0
3116.458336374764,2485562.0
3136.458336374764,2485562.0
3136.458336374764,2487928.0
3160.3738244217666,2487928.0
3160.3738244217666,2513590.0
3183.1406663328958,2513590.0
3183.1406663328958,2538688.0
3203.1406663328958,2538688.0
3203.1406663328958,2563074.0
3223.1406663328958,2563074.0
3223.1406663328958,2587282.0
3244.0038316655987,2587282.0
3244.0038316655987,2612034.0
3264.0038316655987,2612034.0
3264.0038316655987,2619378.0
3284.0038316655987,2619378.0
3284.0038316655987,2635426.0
3304.0038316655987,2635426.0
3304.0038316655987,2650930.0
3324.0038316655987,2650930.0
3324.0038316655987,2683842.0
3346.0437327093528,2683842.0
3346.0437327093528,2714818.0
3366.0437327093528,2714818.0
3366.0437327093528,2745538.0
3386.0437327093528,2745538.0
3386.0437327093528,2772162.0
3410.8420324353433,2772162.0
3410.8420324353433,2799042.0
3430.8420324353433,2799042.0
3430.8420324353433,2826434.0
3474.8330626498478,2826434.0
3474.8330626498478,2853826.0
3499.8169501771476,2853826.0
3499.8169501771476,2894914.0
3519.8169501771476,2894914.0
3519.8169501771476,2932930.0
3542.4362091312037,2932930.0
3542.4362091312037,2946370.0
3562.4362091312037,2946370.0
3562.4362091312037,2984386.0
3582.4362091312037,2984386.0
3582.4362091312037,3022018.0
3602.4362091312037,3022018.0
3602.4362091312037,3060042.0
3626.059904683234,3060042.0
3626.059904683234,3099634.0
3649.87071954108,3099634.0
3649.87071954108,3113370.0
3674.8451183335983,3113370.0
3674.8451183335983,3130338.0
3694.8451183335983,3130338.0
3694.8451183335983,3148650.0
3717.7085071490833,3148650.0
3717.7085071490833,3167298.0
3739.6464911187754,3167298.0
3739.6464911187754,3188634.0
3764.326894579707,3188634.0
3764.326894579707,3210224.0
3788.9110636519713,3210224.0
3788.9110636519713,3264326.0
3808.9110636519717,3264326.0
3808.9110636519717,3291164.0
3832.651832290312,3291164.0
3832.651832290312,3319010.0
3852.651832290312,3319010.0
3852.651832290312,3345088.0
3872.651832290312,3345088.0
3872.651832290312,3364094.0
3892.651832290312,3364094.0
3892.651832290312,3382658.0
3912.651832290312,3382658.0
3912.651832290312,3408294.0
3933.1913916769836,3408294.0
3933.1913916769836,3434151.0
3958.06353292708,3434151.0
3958.06353292708,3460242.0
3979.3662178218387,3460242.0
3979.3662178218387,3486779.0
3999.456271623962,3486779.0
3999.456271623962,3512424.0
4024.42469261133,3512424.0
4024.42469261133,3537609.0
4045.92209107953,3537609.0
4045.92209107953,3555434.0
4065.922091079531,3555434.0
4065.922091079531,3558539.0
4088.499659232673,3558539.0
4088.499659232673,3561212.0
4109.780412035704,3561212.0
4109.780412035704,3564317.0
4134.379481958654,3564317.0
4134.379481958654,3567882.0
4159.302518459929,3567882.0
4159.302518459929,3569463.0
4179.302518459927,3569463.0
4179.302518459927,3573028.0
4201.400331258534,3573028.0
4201.400331258534,3583953.0
4225.606149223312,3583953.0
4225.606149223312,3594688.0
4250.499735382894,3594688.0
4250.499735382894,3604971.0
4274.616968143558,3604971.0
4274.616968143558,3615706.0
4296.007731842484,3615706.0
4296.007731842484,3626215.0
4316.007731842482,3626215.0
4316.007731842482,3636272.0
4336.00773184248,3636272.0
4336.00773184248,3647041.0
4360.291578839236,3647041.0
4360.291578839236,3652114.0
4380.291578839235,3652114.0
4380.291578839235,3662883.0
4400.291578839235,3662883.0
4400.291578839235,3685044.0
4420.291578839235,3685044.0
4420.291578839235,3691269.0
4440.291578839235,3691269.0
4440.291578839235,3695894.0
4460.291578839235,3695894.0
4460.291578839235,3697319.0
4483.371640760153,3697319.0
4483.371640760153,3702392.0
4503.371640760155,3702392.0
4503.371640760155,3718857.0
4523.371640760155,3718857.0
4523.371640760155,3741242.0
4547.100012058794,3741242.0
4547.100012058794,3764111.0
4567.100012058794,3764111.0
4567.100012058794,3785044.0
4587.100012058794,3785044.0
4587.100012058794,3805009.0
4607.100012058794,3805009.0
4607.100012058794,3824809.0
4627.100012058794,3824809.0
4627.100012058794,3844129.0
4647.100012058794,3844129.0
4647.100012058794,3863689.0
4667.100012058794,3863689.0
4667.100012058794,3883901.0
4687.428054727783,3883901.0
4687.428054727783,3924977.0
4707.428054727783,3924977.0
4707.428054727783,3970085.0
4730.192131863145,3970085.0
4730.192131863145,4014689.0
4750.192131863145,4014689.0
4750.192131863145,4047965.0
4774.361221559515,4047965.0
4774.361221559515,4078233.0
4795.099233406067,4078233.0
4795.099233406067,4107857.0
4818.85807656577,4107857.0
4818.85807656577,4138125.0
4840.285124604321,4138125.0
4840.285124604321,4168769.0
4864.2367754855295,4168769.0
4864.2367754855295,4193397.0
4886.56423454909,4193397.0
4886.56423454909,4217649.0
4906.863015740321,4217649.0
4906.863015740321,4244909.0
4926.863015740321,4244909.0
4926.863015740321,4269161.0
4947.768929006209,4269161.0
4947.768929006209,4292897.0
4967.768929006209,4292897.0
4967.768929006209,4317369.0
4988.107554293613,4317369.0
4988.107554293613,4343313.0
5000.0,4343313.0
					</series>
					<series title="out_sum_all_approx" type="l" color="0x00ffff" encoding="csv">0.0,0.0
44.06472547445446,0.0
44.06472547445446,2.0
66.61105333361775,2.0
66.61105333361775,8.0
86.61105333361775,8.0
86.61105333361775,14.0
107.66735129407607,14.0
107.66735129407607,276.0
127.66735129407607,276.0
127.66735129407607,4634.0
147.66735129407607,4634.0
147.66735129407607,10012.0
167.66735129407607,10012.0
167.66735129407607,12718.0
188.73317430960014,12718.0
188.73317430960014,14012.0
212.7863919188598,14012.0
212.7863919188598,15040.0
234.48367424205875,15040.0
234.48367424205875,15398.0
254.48367424205875,15398.0
254.48367424205875,18570.0
274.4836742420587,18570.0
274.4836742420587,27838.0
294.4836742420587,27838.0
294.4836742420587,33322.0
315.791428194046,33322.0
315.791428194046,33382.0
335.791428194046,33382.0
335.791428194046,33668.0
357.5920895348675,33668.0
357.5920895348675,46992.0
377.5920895348675,46992.0
377.5920895348675,48028.0
398.6901927868742,48028.0
398.6901927868742,69578.0
418.6901927868742,69578.0
418.6901927868742,90872.0
443.6117475673943,90872.0
443.6117475673943,108302.0
463.6117475673943,108302.0
463.6117475673943,164956.0
483.6117475673943,164956.0
483.6117475673943,166050.0
506.60978784182356,166050.0
506.60978784182356,185768.0
526.6097878418236,185768.0
526.6097878418236,205006.0
546.6097878418236,205006.0
546.6097878418236,209108.0
566.6097878418236,209108.0
566.6097878418236,226842.0
587.5438823525633,226842.0
587.5438823525633,244512.0
607.5438823525633,244512.0
607.5438823525633,261974.0
631.0907468616801,261974.0
631.0907468616801,283044.0
655.7790507251985,283044.0
655.7790507251985,299496.0
676.2421958361875,299496.0
676.2421958361875,321076.0
700.4186370206269,321076.0
700.4186370206269,345416.0
723.204535828623,345416.0
723.204535828623,366020.0
743.204535828623,366020.0
743.204535828623,391920.0
763.5656702094236,391920.0
763.5656702094236,408308.0
783.5656702094236,408308.0
783.5656702094236,426808.0
805.8829656535,426808.0
805.8829656535,476004.0
825.8829656534998,476004.0
825.8829656534998,501713.0
847.637014896502,501713.0
847.637014896502,514339.0
867.6370148965023,514339.0
867.6370148965023,522811.0
887.6370148965023,522811.0
887.6370148965023,524215.0
907.6370148965023,524215.0
907.6370148965023,581859.0
927.6370148965023,581859.0
927.6370148965023,619101.0
947.8676115266378,619101.0
947.8676115266378,660215.0
967.8676115266378,660215.0
967.8676115266378,701009.0
987.8676115266378,701009.0
987.8676115266378,743119.0
1007.8676115266378,743119.0
1007.8676115266378,765774.0
1032.1726033381517,765774.0
1032.1726033381517,773324.0
1052.1726033381517,773324.0
1052.1726033381517,779530.0
1075.1821428990322,779530.0
1075.1821428990322,779814.0
1096.057192118499,779814.0
1096.057192118499,784242.0
1116.1529571387316,784242.0
1116.1529571387316,789462.0
1139.573454018653,789462.0
1139.573454018653,802068.0
1159.573454018653,802068.0
1159.573454018653,808434.0
1179.573454018653,808434.0
1179.573454018653,815792.0
1203.2935991603329,815792.0
1203.2935991603329,822958.0
1223.2935991603329,822958.0
1223.2935991603329,825052.0
1243.2935991603329,825052.0
1243.2935991603329,864210.0
1263.2935991603329,864210.0
1263.2935991603329,898192.0
1283.2935991603329,898192.0
1283.2935991603329,903582.0
1308.2351433173799,903582.0
1308.2351433173799,913524.0
1328.2351433173803,913524.0
1328.2351433173803,915394.0
1348.2351433173808,915394.0
1348.2351433173808,916712.0
1368.2351433173812,916712.0
1368.2351433173812,917854.0
1388.2958798264212,917854.0
1388.2958798264212,921540.0
1409.7529480306025,921540.0
1409.7529480306025,924115.0
1434.074708262697,924115.0
1434.074708262697,934702.0
1454.0747082626974,934702.0
1454.0747082626974,934889.0
1474.0747082626979,934889.0
1474.0747082626979,936312.0
1494.0747082626979,936312.0
1494.0747082626979,940991.0
1514.0747082626979,940991.0
1514.0747082626979,941104.0
1535.006976460346,941104.0
1535.006976460346,951451.0
1555.006976460346,951451.0
1555.006976460346,962810.0
1575.006976460346,962810.0
1575.006976460346,974585.0
1595.006976460346,974585.0
1595.006976460346,976166.0
1617.1318378599892,976166.0
1617.1318378599892,1011011.0
1637.1318378599892,1011011.0
1637.1318378599892,1012258.0
1657.1318378599892,1012258.0
1657.1318378599892,1019449.0
1677.1318378599892,1019449.0
1677.1318378599892,1024576.0
1699.952102835936,1024576.0
1699.952102835936,1026279.0
1719.952102835936,1026279.0
1719.952102835936,1030566.0
1740.4629071759466,1030566.0
1740.4629071759466,1036453.0
1763.3577736948557,1036453.0
1763.3577736948557,1042148.0
1783.3577736948557,1042148.0
1783.3577736948557,1063201.0
1804.5720553285848,1063201.0
1804.5720553285848,1068864.0
1824.5720553285848,1068864.0
1824.5720553285848,1069165.0
1844.5720553285848,1069165.0
1844.5720553285848,1073788.0
1864.5720553285848,1073788.0
1864.5720553285848,1118105.0
1884.5720553285848,1118105.0
1884.5720553285848,1156406.0
1904.5720553285848,1156406.0
1904.5720553285848,1190549.0
1927.991628976719,1190549.0
1927.991628976719,1208468.0
1947.991628976719,1208468.0
1947.991628976719,1239090.0
1967.991628976719,1239090.0
1967.991628976719,1244016.0
1987.991628976719,1244016.0
1987.991628976719,1244318.0
2007.991628976719,1244318.0
2007.991628976719,1246540.0
2027.991628976719,1246540.0
2027.991628976719,1250242.0
2048.625393403176,1250242.0
2048.625393403176,1255672.0
2068.625393403176,1255672.0
2068.625393403176,1265126.0
2088.625393403176,1265126.0
2088.625393403176,1270586.0
2110.2870617357025,1270586.0
2110.2870617357025,1304721.0
2130.2870617357025,1304721.0
2130.2870617357025,1338799.0
2150.2870617357025,1338799.0
2150.2870617357025,1339897.0
2174.9632665088343,1339897.0
2174.9632665088343,1357655.0
2197.386353966262,1357655.0
2197.386353966262,1390739.0
2217.386353966262,1390739.0
2217.386353966262,1394191.0
2237.386353966262,1394191.0
2237.386353966262,1431355.0
2257.386353966262,1431355.0
2257.386353966262,1435530.0
2281.8829344957144,1435530.0
2281.8829344957144,1446345.0
2302.7892444887207,1446345.0
2302.7892444887207,1446408.0
2325.0079223475695,1446408.0
2325.0079223475695,1447495.0
2346.0237026956675,1447495.0
2346.0237026956675,1447878.0
2366.0237026956665,1447878.0
2366.0237026956665,1448421.0
2389.7602467022243,1448421.0
2389.7602467022243,1450804.0
2409.7602467022243,1450804.0
2409.7602467022243,1457299.0
2429.7602467022243,1457299.0
2429.7602467022243,1462080.0
2449.7602467022243,1462080.0
2449.7602467022243,1464730.0
2469.7602467022243,1464730.0
2469.7602467022243,1468436.0
2492.6830049788823,1468436.0
2492.6830049788823,1471378.0
2512.683004978883,1471378.0
2512.683004978883,1471648.0
2537.1791618041766,1471648.0
2537.1791618041766,1472422.0
2561.6552939753324,1472422.0
2561.6552939753324,1483404.0
2582.7059083690815,1483404.0
2582.7059083690815,1484726.0
2602.7059083690815,1484726.0
2602.7059083690815,1494747.0
2625.732893975493,1494747.0
2625.732893975493,1496786.0
2646.557817964623,1496786.0
2646.557817964623,1502177.0
2666.557817964623,1502177.0
2666.557817964623,1507368.0
2686.557817964623,1507368.0
2686.557817964623,1520903.0
2706.557817964623,1520903.0
2706.557817964623,1530214.0
2726.557817964623,1530214.0
2726.557817964623,1546053.0
2746.557817964623,1546053.0
2746.557817964623,1569827.0
2766.557817964623,1569827.0
2766.557817964623,1574465.0
2786.557817964623,1574465.0
2786.557817964623,1574825.0
2806.557817964623,1574825.0
2806.557817964623,1606019.0
2826.557817964623,1606019.0
2826.557817964623,1651099.0
2846.886921457755,1651099.0
2846.886921457755,1671643.0
2868.225293408888,1671643.0
2868.225293408888,1692167.0
2888.225293408888,1692167.0
2888.225293408888,1718318.0
2908.225293408888,1718318.0
2908.225293408888,1723780.0
2928.225293408888,1723780.0
2928.225293408888,1724146.0
2948.225293408888,1724146.0
2948.225293408888,1750422.0
2968.225293408888,1750422.0
2968.225293408888,1804714.0
2988.225293408888,1804714.0
2988.225293408888,1825350.0
3008.8281660075713,1825350.0
3008.8281660075713,1843474.0
3028.8281660075713,1843474.0
3028.8281660075713,1866662.0
3048.8281660075713,1866662.0
3048.8281660075713,1887492.0
3071.807628881926,1887492.0
3071.807628881926,1909292.0
3091.807628881926,1909292.0
3091.807628881926,1931056.0
3116.458336374764,1931056.0
3116.458336374764,1948802.0
3136.458336374764,1948802.0
3136.458336374764,1966656.0
3160.3738244217666,1966656.0
3160.3738244217666,1983422.0
3183.1406663328958,1983422.0
3183.1406663328958,1987896.0
3203.1406663328958,1987896.0
3203.1406663328958,1989474.0
3223.1406663328958,1989474.0
3223.1406663328958,1990850.0
3244.0038316655987,1990850.0
3244.0038316655987,1991106.0
3264.0038316655987,1991106.0
3264.0038316655987,2007698.0
3284.0038316655987,2007698.0
3284.0038316655987,2012242.0
3304.0038316655987,2012242.0
3304.0038316655987,2013354.0
3324.0038316655987,2013354.0
3324.0038316655987,2017714.0
3346.0437327093528,2017714.0
3346.0437327093528,2018770.0
3366.0437327093528,2018770.0
3366.0437327093528,2020114.0
3386.0437327093528,2020114.0
3386.0437327093528,2024066.0
3410.8420324353433,2024066.0
3410.8420324353433,2036660.0
3430.8420324353433,2036660.0
3430.8420324353433,2051100.0
3454.8330626498478,2051100.0
3454.8330626498478,2058084.0
3474.8330626498478,2058084.0
3474.8330626498478,2059044.0
3499.8169501771476,2059044.0
3499.8169501771476,2075472.0
3519.8169501771476,2075472.0
3519.8169501771476,2108336.0
3542.4362091312037,2108336.0
3542.4362091312037,2108648.0
3562.4362091312037,2108648.0
3562.4362091312037,2110016.0
3582.4362091312037,2110016.0
3582.4362091312037,2116162.0
3602.4362091312037,2116162.0
3602.4362091312037,2153330.0
3626.059904683234,2153330.0
3626.059904683234,2190490.0
3649.87071954108,2190490.0
3649.87071954108,2195140.0
3674.8451183335983,2195140.0
3674.8451183335983,2199252.0
3694.8451183335983,2199252.0
3694.8451183335983,2212594.0
3717.7085071490833,2212594.0
3717.7085071490833,2225930.0
3739.6464911187754,2225930.0
3739.6464911187754,2225938.0
3764.326894579707,2225938.0
3764.326894579707,2230384.0
3788.9110636519713,2230384.0
3788.9110636519713,2248014.0
3808.9110636519717,2248014.0
3808.9110636519717,2296348.0
3832.651832290312,2296348.0
3832.651832290312,2334682.0
3852.651832290312,2334682.0
3852.651832290312,2382904.0
3872.651832290312,2382904.0
3872.651832290312,2415782.0
3892.651832290312,2415782.0
3892.651832290312,2448850.0
3912.651832290312,2448850.0
3912.651832290312,2470414.0
3933.1913916769836,2470414.0
3933.1913916769836,2490985.0
3958.06353292708,2490985.0
3958.06353292708,2513544.0
3979.3662178218387,2513544.0
3979.3662178218387,2533831.0
3999.456271623962,2533831.0
3999.456271623962,2554102.0
4024.42469261133,2554102.0
4024.42469261133,2560293.0
4045.92209107953,2560293.0
4045.92209107953,2563892.0
4065.922091079531,2563892.0
4065.922091079531,2574963.0
4088.499659232673,2574963.0
4088.499659232673,2578418.0
4109.780412035704,2578418.0
4109.780412035704,2598657.0
4134.379481958654,2598657.0
4134.379481958654,2605680.0
4159.302518459929,2605680.0
4159.302518459929,2605901.0
4179.302518459927,2605901.0
4179.302518459927,2626764.0
4201.400331258534,2626764.0
4201.400331258534,2644459.0
4225.606149223312,2644459.0
4225.606149223312,2663930.0
4250.499735382894,2663930.0
4250.499735382894,2667781.0
4274.616968143558,2667781.0
4274.616968143558,2671696.0
4296.007731842484,2671696.0
4296.007731842484,2676137.0
4316.007731842482,2676137.0
4316.007731842482,2686498.0
4336.00773184248,2686498.0
4336.00773184248,2696447.0
4360.291578839236,2696447.0
4360.291578839236,2696476.0
4380.291578839235,2696476.0
4380.291578839235,2710121.0
4400.291578839235,2710121.0
4400.291578839235,2723462.0
4420.291578839235,2723462.0
4420.291578839235,2723839.0
4440.291578839235,2723839.0
4440.291578839235,2725192.0
4460.291578839235,2725192.0
4460.291578839235,2725541.0
4483.371640760153,2725541.0
4483.371640760153,2725908.0
4503.371640760155,2725908.0
4503.371640760155,2739043.0
4523.371640760155,2739043.0
4523.371640760155,2744002.0
4547.100012058794,2744002.0
4547.100012058794,2748225.0
4567.100012058794,2748225.0
4567.100012058794,2757760.0
4587.100012058794,2757760.0
4587.100012058794,2763327.0
4607.100012058794,2763327.0
4607.100012058794,2764365.0
4627.100012058794,2764365.0
4627.100012058794,2764667.0
4647.100012058794,2764667.0
4647.100012058794,2765795.0
4667.100012058794,2765795.0
4667.100012058794,2821787.0
4687.428054727783,2821787.0
4687.428054727783,2871271.0
4707.428054727783,2871271.0
4707.428054727783,2921299.0
4730.192131863145,2921299.0
4730.192131863145,2971563.0
4750.192131863145,2971563.0
4750.192131863145,2989235.0
4774.361221559515,2989235.0
4774.361221559515,3043359.0
4795.099233406067,3043359.0
4795.099233406067,3081575.0
4818.85807656577,3081575.0
4818.85807656577,3082831.0
4840.285124604321,3082831.0
4840.285124604321,3145293.0
4864.2367754855295,3145293.0
4864.2367754855295,3199925.0
4886.56423454909,3199925.0
4886.56423454909,3217181.0
4906.863015740321,3217181.0
4906.863015740321,3235801.0
4926.863015740321,3235801.0
4926.863015740321,3257109.0
4947.768929006209,3257109.0
4947.768929006209,3273809.0
4967.768929006209,3273809.0
4967.768929006209,3275545.0
4988.107554293613,3275545.0
4988.107554293613,3275649.0
5000.0,3275649.0
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=10000; 1] (max: res_count)</formula>
			<comment>Number of results</comment>
		</query>
		<query>
			<formula>simulate[&lt;=5000;1] {mean_abs_error}</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:35:47 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="mean_abs_error" type="l" color="0xff0000" encoding="csv">0.0,0.0
86.59885492059402,0.0
86.59885492059402,96.0
106.59885492059402,96.0
106.59885492059402,666.0
126.59885492059402,666.0
126.59885492059402,707.3333333333334
148.76598363975063,707.3333333333334
148.76598363975063,761.7142857142857
168.76598363975063,761.7142857142857
168.76598363975063,280.5
189.01604560669512,280.5
189.01604560669512,116.0
209.01604560669512,116.0
209.01604560669512,498.0
229.01604560669512,498.0
229.01604560669512,1010.5454545454545
249.01604560669512,1010.5454545454545
249.01604560669512,2584.0
269.0160456066951,2584.0
269.0160456066951,3717.5384615384614
289.0160456066951,3717.5384615384614
289.0160456066951,4726.857142857143
309.0160456066951,4726.857142857143
309.0160456066951,4332.266666666666
329.0160456066951,4332.266666666666
329.0160456066951,3440.5
351.7669115890749,3440.5
351.7669115890749,2943.294117647059
373.1017917848658,2943.294117647059
373.1017917848658,3786.0
396.6607919816695,3786.0
396.6607919816695,6032.631578947368
418.2093480815481,6032.631578947368
418.2093480815481,6441.4
438.2093480815481,6441.4
438.2093480815481,7333.9047619047615
460.21951260808294,7333.9047619047615
460.21951260808294,7391.363636363636
480.2195126080828,7391.363636363636
480.2195126080828,7622.0
500.81566688087185,7622.0
500.81566688087185,7040.083333333333
521.5934205550642,7040.083333333333
521.5934205550642,6496.24
541.5934205550642,6496.24
541.5934205550642,5804.076923076923
562.0246008963925,5804.076923076923
562.0246008963925,6647.185185185185
582.0246008963925,6647.185185185185
582.0246008963925,6422.071428571428
606.0963260027247,6422.071428571428
606.0963260027247,6273.172413793103
627.382858348418,6273.172413793103
627.382858348418,6980.333333333333
647.3828583484178,6980.333333333333
647.3828583484178,6965.741935483871
670.0495275348551,6965.741935483871
670.0495275348551,7123.875
693.0027857351052,7123.875
693.0027857351052,6799.393939393939
713.0027857351052,6799.393939393939
713.0027857351052,6727.411764705882
733.0027857351052,6727.411764705882
733.0027857351052,6644.914285714286
756.3134468338139,6644.914285714286
756.3134468338139,6582.111111111111
779.9429573478683,6582.111111111111
779.9429573478683,6436.864864864865
799.9429573478683,6436.864864864865
799.9429573478683,6371.473684210527
819.9429573478683,6371.473684210527
819.9429573478683,5828.0
843.2485674515104,5828.0
843.2485674515104,5691.5
863.2485674515104,5691.5
863.2485674515104,5978.243902439024
886.3824608643963,5978.243902439024
886.3824608643963,5904.952380952381
909.220700382856,5904.952380952381
909.220700382856,5938.139534883721
929.318273625239,5938.139534883721
929.318273625239,6040.181818181818
950.1939743700893,6040.181818181818
950.1939743700893,6418.355555555556
973.782091478327,6418.355555555556
973.782091478327,6706.478260869565
997.9131724268209,6706.478260869565
997.9131724268209,7409.404255319149
1020.5553571146302,7409.404255319149
1020.5553571146302,7882.375
1043.6387989989787,7882.375
1043.6387989989787,8809.510204081633
1063.6387989989787,8809.510204081633
1063.6387989989787,9079.08
1083.6387989989787,9079.08
1083.6387989989787,9676.627450980392
1108.3842473485715,9676.627450980392
1108.3842473485715,9455.615384615385
1128.3842473485715,9455.615384615385
1128.3842473485715,9245.584905660377
1148.3842473485715,9245.584905660377
1148.3842473485715,8761.25925925926
1171.0845517947523,8761.25925925926
1171.0845517947523,8008.363636363636
1193.9170104418467,8008.363636363636
1193.9170104418467,7808.5
1215.9253135849303,7808.5
1215.9253135849303,7135.087719298245
1240.291316365241,7135.087719298245
1240.291316365241,6966.689655172414
1262.9780722575229,6966.689655172414
1262.9780722575229,6877.627118644068
1282.9780722575229,6877.627118644068
1282.9780722575229,6777.033333333334
1302.9780722575229,6777.033333333334
1302.9780722575229,6681.475409836065
1324.9878660507254,6681.475409836065
1324.9878660507254,6605.967741935484
1347.3722219466586,6605.967741935484
1347.3722219466586,6495.523809523809
1371.7717322743176,6495.523809523809
1371.7717322743176,6393.53125
1391.7717322743176,6393.53125
1391.7717322743176,6538.861538461539
1411.7717322743176,6538.861538461539
1411.7717322743176,6681.484848484848
1433.1965780524447,6681.484848484848
1433.1965780524447,6929.3432835820895
1453.1965780524447,6929.3432835820895
1453.1965780524447,7643.911764705882
1473.1965780524447,7643.911764705882
1473.1965780524447,7922.405797101449
1493.1965780524451,7922.405797101449
1493.1965780524451,8123.342857142857
1513.3237571663608,8123.342857142857
1513.3237571663608,8386.61971830986
1533.3237571663612,8386.61971830986
1533.3237571663612,8558.805555555555
1553.3237571663617,8558.805555555555
1553.3237571663617,8271.260273972603
1573.323757166362,8271.260273972603
1573.323757166362,8390.675675675675
1594.944878688401,8390.675675675675
1594.944878688401,8054.8
1616.3472558742785,8054.8
1616.3472558742785,8160.5
1638.9189805810736,8160.5
1638.9189805810736,8218.623376623376
1661.558526734442,8218.623376623376
1661.558526734442,8254.692307692309
1681.558526734442,8254.692307692309
1681.558526734442,8272.93670886076
1704.7067938532728,8272.93670886076
1704.7067938532728,8361.525
1727.5696754781113,8361.525
1727.5696754781113,8387.67901234568
1747.5696754781113,8387.67901234568
1747.5696754781113,8407.975609756097
1767.5696754781113,8407.975609756097
1767.5696754781113,8193.518072289156
1790.6303090383221,8193.518072289156
1790.6303090383221,8220.738095238095
1814.9776234115245,8220.738095238095
1814.9776234115245,8257.482352941177
1834.9776234115245,8257.482352941177
1834.9776234115245,8204.348837209302
1854.9776234115245,8204.348837209302
1854.9776234115245,8306.551724137931
1879.228060789297,8306.551724137931
1879.228060789297,8675.704545454546
1901.061859745211,8675.704545454546
1901.061859745211,8399.168539325843
1924.9081616705791,8399.168539325843
1924.9081616705791,7993.044444444445
1948.2756511311445,7993.044444444445
1948.2756511311445,7630.307692307692
1971.4644526143068,7630.307692307692
1971.4644526143068,7792.413043478261
1991.6700813744658,7792.413043478261
1991.6700813744658,8120.408602150537
2011.6700813744658,8120.408602150537
2011.6700813744658,8098.851063829788
2031.6700813744658,8098.851063829788
2031.6700813744658,7751.957894736842
2051.6700813744656,7751.957894736842
2051.6700813744656,7766.791666666667
2076.13541325681,7766.791666666667
2076.13541325681,7771.649484536082
2097.5474008325123,7771.649484536082
2097.5474008325123,7895.918367346939
2117.5474008325123,7895.918367346939
2117.5474008325123,7872.343434343435
2139.4920538953,7872.343434343435
2139.4920538953,7999.54
2164.318688689502,7999.54
2164.318688689502,7977.148514851485
2187.2513607228116,7977.148514851485
2187.2513607228116,8092.666666666667
2208.5483303365227,8092.666666666667
2208.5483303365227,8471.533980582524
2228.5483303365227,8471.533980582524
2228.5483303365227,8614.76923076923
2250.7561510882306,8614.76923076923
2250.7561510882306,8723.504761904762
2274.214187981511,8723.504761904762
2274.214187981511,8747.32075471698
2294.214187981511,8747.32075471698
2294.214187981511,8788.691588785046
2314.214187981511,8788.691588785046
2314.214187981511,8885.166666666666
2334.214187981511,8885.166666666666
2334.214187981511,8728.201834862386
2357.26005797745,8728.201834862386
2357.26005797745,8860.781818181818
2378.648482031859,8860.781818181818
2378.648482031859,8807.981981981982
2398.6484820318583,8807.981981981982
2398.6484820318583,8704.625
2418.6484820318583,8704.625
2418.6484820318583,8763.16814159292
2438.6484820318583,8763.16814159292
2438.6484820318583,8489.087719298246
2462.7708511115993,8489.087719298246
2462.7708511115993,8549.878260869566
2482.7708511115993,8549.878260869566
2482.7708511115993,8573.344827586207
2502.7708511115993,8573.344827586207
2502.7708511115993,8553.82905982906
2522.7708511115993,8553.82905982906
2522.7708511115993,8556.847457627118
2542.7708511115993,8556.847457627118
2542.7708511115993,8630.151260504203
2562.7708511115993,8630.151260504203
2562.7708511115993,8723.633333333333
2584.1826659851718,8723.633333333333
2584.1826659851718,8691.933884297521
2605.515066043335,8691.933884297521
2605.515066043335,8689.672131147541
2625.515066043335,8689.672131147541
2625.515066043335,8593.560975609756
2645.515066043335,8593.560975609756
2645.515066043335,8520.806451612903
2665.515066043335,8520.806451612903
2665.515066043335,8465.568
2689.61005580295,8465.568
2689.61005580295,8408.825396825398
2709.61005580295,8408.825396825398
2709.61005580295,8545.070866141732
2729.61005580295,8545.070866141732
2729.61005580295,8935.921875
2749.61005580295,8935.921875
2749.61005580295,8922.573643410853
2773.047121982574,8922.573643410853
2773.047121982574,8918.8
2793.047121982574,8918.8
2793.047121982574,8852.54961832061
2813.047121982574,8852.54961832061
2813.047121982574,8843.848484848484
2833.047121982574,8843.848484848484
2833.047121982574,8821.96992481203
2856.5525637010965,8821.96992481203
2856.5525637010965,8833.507462686568
2880.1137739906044,8833.507462686568
2880.1137739906044,8847.185185185184
2901.6028579938647,8847.185185185184
2901.6028579938647,8919.014705882353
2921.6028579938647,8919.014705882353
2921.6028579938647,8709.445255474453
2941.6028579938647,8709.445255474453
2941.6028579938647,8651.898550724638
2963.3281058268262,8651.898550724638
2963.3281058268262,8625.107913669064
2986.4535649327668,8625.107913669064
2986.4535649327668,8587.414285714285
3011.2586666650845,8587.414285714285
3011.2586666650845,8561.375886524822
3032.470979059711,8561.375886524822
3032.470979059711,8478.69014084507
3053.200631322236,8478.69014084507
3053.200631322236,8403.678321678322
3075.179801815823,8403.678321678322
3075.179801815823,8322.763888888889
3095.179801815822,8322.763888888889
3095.179801815822,8271.944827586207
3118.2039197189833,8271.944827586207
3118.2039197189833,8241.315068493152
3141.447094695879,8241.315068493152
3141.447094695879,8214.204081632653
3164.991728669004,8214.204081632653
3164.991728669004,8199.567567567568
3189.8313825505043,8199.567567567568
3189.8313825505043,8191.892617449665
3209.8313825505033,8191.892617449665
3209.8313825505033,8131.946666666667
3229.8313825505024,8131.946666666667
3229.8313825505024,7965.470198675496
3249.8313825505015,7965.470198675496
3249.8313825505015,7803.473684210527
3274.2821782638516,7803.473684210527
3274.2821782638516,7801.503267973856
3294.28217826385,7801.503267973856
3294.28217826385,7824.064935064935
3314.282178263848,7824.064935064935
3314.282178263848,7825.587096774194
3334.757373218625,7825.587096774194
3334.757373218625,7721.397435897436
3354.757373218624,7721.397435897436
3354.757373218624,7639.171974522293
3374.757373218623,7639.171974522293
3374.757373218623,7641.202531645569
3394.7826111523555,7641.202531645569
3394.7826111523555,7551.157232704402
3414.7826111523555,7551.157232704402
3414.7826111523555,7396.2375
3434.7826111523555,7396.2375
3434.7826111523555,7233.9503105590065
3454.7826111523555,7233.9503105590065
3454.7826111523555,7266.16049382716
3474.7826111523555,7266.16049382716
3474.7826111523555,7304.7239263803685
3495.6995473939114,7304.7239263803685
3495.6995473939114,7265.963414634146
3519.7737504562483,7265.963414634146
3519.7737504562483,7270.727272727273
3539.7737504562483,7270.727272727273
3539.7737504562483,7228.373493975903
3562.7412772711486,7228.373493975903
3562.7412772711486,7192.826347305389
3582.7412772711486,7192.826347305389
3582.7412772711486,7077.797619047619
3605.9239267604707,7077.797619047619
3605.9239267604707,7023.349112426035
3630.263627645054,7023.349112426035
3630.263627645054,6914.552941176471
3650.263627645054,6914.552941176471
3650.263627645054,6864.479532163743
3672.2652703742096,6864.479532163743
3672.2652703742096,6888.709302325581
3693.5290748053126,6888.709302325581
3693.5290748053126,6824.242774566474
3715.916448383672,6824.242774566474
3715.916448383672,6772.977011494253
3735.916448383672,6772.977011494253
3735.916448383672,6741.702857142857
3759.149679399133,6741.702857142857
3759.149679399133,6715.397727272727
3779.1496793991323,6715.397727272727
3779.1496793991323,6840.576271186441
3799.1496793991314,6840.576271186441
3799.1496793991314,6954.505617977528
3819.1496793991305,6954.505617977528
3819.1496793991305,7100.458100558659
3841.205251597342,7100.458100558659
3841.205251597342,7205.722222222223
3863.7287856994544,7205.722222222223
3863.7287856994544,7013.160220994475
3883.7287856994544,7013.160220994475
3883.7287856994544,7021.395604395604
3904.4672409172526,7021.395604395604
3904.4672409172526,6953.9672131147545
3924.4672409172526,6953.9672131147545
3924.4672409172526,6902.934782608696
3945.3005597118645,6902.934782608696
3945.3005597118645,6881.016216216216
3967.716417610624,6881.016216216216
3967.716417610624,6855.279569892473
3987.9965418530414,6855.279569892473
3987.9965418530414,6805.679144385027
4007.9965418530414,6805.679144385027
4007.9965418530414,6758.308510638298
4027.9965418530414,6758.308510638298
4027.9965418530414,6724.751322751323
4051.825875753981,6724.751322751323
4051.825875753981,6692.557894736842
4073.2825194601687,6692.557894736842
4073.2825194601687,6631.424083769633
4097.270159827019,6631.424083769633
4097.270159827019,6571.09375
4117.270159827019,6571.09375
4117.270159827019,6517.886010362694
4137.270159827019,6517.886010362694
4137.270159827019,6486.422680412371
4158.54880856579,6486.422680412371
4158.54880856579,6492.0
4179.329078271946,6492.0
4179.329078271946,6494.632653061224
4199.329078271946,6494.632653061224
4199.329078271946,6527.289340101523
4222.735279098936,6527.289340101523
4222.735279098936,6522.030303030303
4245.593124044652,6522.030303030303
4245.593124044652,6408.130653266332
4268.927104465265,6408.130653266332
4268.927104465265,6286.17
4288.927104465265,6286.17
4288.927104465265,6246.278606965174
4308.927104465265,6246.278606965174
4308.927104465265,6218.425742574257
4331.022622319751,6218.425742574257
4331.022622319751,6194.7290640394085
4351.02262231975,6194.7290640394085
4351.02262231975,6164.205882352941
4373.371413091142,6164.205882352941
4373.371413091142,6187.678048780488
4393.371413091142,6187.678048780488
4393.371413091142,6188.553398058252
4415.848501617585,6188.553398058252
4415.848501617585,6196.144927536232
4437.3791229965,6196.144927536232
4437.3791229965,6181.3942307692305
4460.035918369478,6181.3942307692305
4460.035918369478,6229.942583732058
4482.979280038145,6229.942583732058
4482.979280038145,6279.742857142857
4503.24617821594,6279.742857142857
4503.24617821594,6252.464454976303
4523.24617821594,6252.464454976303
4523.24617821594,6276.764150943396
4543.24617821594,6276.764150943396
4543.24617821594,6244.948356807512
4567.686087493191,6244.948356807512
4567.686087493191,6272.794392523365
4587.686087493191,6272.794392523365
4587.686087493191,6308.53023255814
4610.1437262186,6308.53023255814
4610.1437262186,6249.564814814815
4630.1437262186,6249.564814814815
4630.1437262186,6337.889400921659
4650.1437262186,6337.889400921659
4650.1437262186,6200.798165137615
4670.1437262186,6200.798165137615
4670.1437262186,6195.004566210046
4693.124616458575,6195.004566210046
4693.124616458575,6200.754545454545
4714.2346492019315,6200.754545454545
4714.2346492019315,5995.638009049774
4734.234649201932,5995.638009049774
4734.234649201932,5840.2972972972975
4759.04789399495,5840.2972972972975
4759.04789399495,5849.506726457399
4779.04789399495,5849.506726457399
4779.04789399495,5833.571428571428
4799.04789399495,5833.571428571428
4799.04789399495,5808.0888888888885
4821.686072586137,5808.0888888888885
4821.686072586137,5860.159292035398
4841.686072586139,5860.159292035398
4841.686072586139,5767.612334801762
4865.099904013548,5767.612334801762
4865.099904013548,5648.228070175439
4887.640024048958,5648.228070175439
4887.640024048958,5637.74672489083
4907.7506912303925,5637.74672489083
4907.7506912303925,5554.139130434783
4932.0656337332475,5554.139130434783
4932.0656337332475,5513.645021645022
4954.1881099040165,5513.645021645022
4954.1881099040165,5476.258620689655
4976.032322561915,5476.258620689655
4976.032322561915,5450.789699570815
4996.032322561913,5450.789699570815
4996.032322561913,5425.9059829059825
5000.0,5425.9059829059825
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>simulate[&lt;=5000;1] {worst_case_error}</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-07 14:38:52 +0100">
				<plot title="Simulations (1)" xaxis="time" yaxis="value">
					<series title="worst_case_error" type="l" color="0xff0000" encoding="csv">0.0,0.0
40.0,0.0
40.0,3968.0
81.56589393620379,3968.0
81.56589393620379,15740.0
105.75776035664603,15740.0
105.75776035664603,19836.0
638.1708126271711,19836.0
638.1708126271711,26144.0
658.1708126271709,26144.0
658.1708126271709,34042.0
1616.2102467055388,34042.0
1616.2102467055388,36432.0
1909.2919853313342,36432.0
1909.2919853313342,51840.0
2793.325991087306,51840.0
2793.325991087306,57946.0
5000.0,57946.0
					</series>
					<comment/>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:error_prob)</formula>
			<comment>Error Probability</comment>
			<result outcome="success" type="quantity" value="0.991168 ± 0.00270762 (95% CI)" timestamp="2024-03-07 14:25:54 +0100">
				<details>0.991168 ± 0.00270762 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: error_prob" yaxis="probability density">
					<series title="density" type="b(0.002729)" color="0x0000ff" encoding="csv">0.9848484848484849,109.94823529411765
0.9875770416024654,0.0
0.9903055983564458,146.59764705882353
0.9930341551104264,109.94823529411765
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.9911678681006313,0.0
0.9911678681006313,146.59764705882355
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=0.0027286, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0.984848, 0.995763]
Mean estimate of displayed sample: 0.991168 ± 0.00270762 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: error_prob" yaxis="probability">
					<series title="probability" type="b(0.002729)" color="0x0000ff" encoding="csv">0.9848484848484849,0.3
0.9875770416024654,0.0
0.9903055983564458,0.4
0.9930341551104264,0.3
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.9911678681006313,0.0
0.9911678681006313,0.4
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=0.0027286, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0.984848, 0.995763]
Mean estimate of displayed sample: 0.991168 ± 0.00270762 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: error_prob" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">0.9848484848484849,0.0
0.9875770416024654,0.3
0.9903055983564458,0.3
0.9930341551104264,0.7
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.9911678681006313,0.0
0.9911678681006313,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=0.0027286, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0.984848, 0.995763]
Mean estimate of displayed sample: 0.991168 ± 0.00270762 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: error_prob" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">0.9848484848484849,0.30849710781876083
0.9875770416024654,0.6524528500599973
0.9903055983564458,0.6524528500599973
0.9930341551104264,0.9332604888222655
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">0.9848484848484849,0.0
0.9875770416024654,0.06673951117773447
0.9903055983564458,0.06673951117773447
0.9930341551104264,0.3475471499400027
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">0.9848484848484849,0.0
0.9875770416024654,0.3
0.9903055983564458,0.3
0.9930341551104264,0.7
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.9911678681006313,0.0
0.9911678681006313,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=0.0027286, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0.984848, 0.995763]
Mean estimate of displayed sample: 0.991168 ± 0.00270762 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: error_prob" yaxis="count">
					<series title="count" type="b(0.002729)" color="0x0000ff" encoding="csv">0.9848484848484849,3.0
0.9875770416024654,0.0
0.9903055983564458,4.0
0.9930341551104264,3.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.9911678681006313,0.0
0.9911678681006313,4.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=0.0027286, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0.984848, 0.995763]
Mean estimate of displayed sample: 0.991168 ± 0.00270762 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:mean_abs_error)</formula>
			<comment>Mean Absolute Error</comment>
			<result outcome="success" type="quantity" value="7380.29 ± 1669.51 (95% CI)" timestamp="2024-03-07 14:27:57 +0100">
				<details>7380.29 ± 1669.51 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: mean_abs_error" yaxis="probability density">
					<series title="density" type="b(1702.525592)" color="0x0000ff" encoding="csv">4628.506329113924,2.3494507334598566E-4
6331.031920748487,1.7620880500948926E-4
8033.5575123830495,5.8736268336496416E-5
9736.083104017613,1.1747253667299283E-4
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">7380.287248553027,0.0
7380.287248553027,2.3494507334598566E-4
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1702.5, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4629, 1.144e+04]
Mean estimate of displayed sample: 7380 ± 1670 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: mean_abs_error" yaxis="probability">
					<series title="probability" type="b(1702.525592)" color="0x0000ff" encoding="csv">4628.506329113924,0.4
6331.031920748487,0.3
8033.5575123830495,0.1
9736.083104017613,0.2
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">7380.287248553027,0.0
7380.287248553027,0.4
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1702.5, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4629, 1.144e+04]
Mean estimate of displayed sample: 7380 ± 1670 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: mean_abs_error" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">4628.506329113924,0.0
6331.031920748487,0.4
8033.5575123830495,0.7
9736.083104017613,0.8
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">7380.287248553027,0.0
7380.287248553027,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1702.5, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4629, 1.144e+04]
Mean estimate of displayed sample: 7380 ± 1670 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: mean_abs_error" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">4628.506329113924,0.30849710781876083
6331.031920748487,0.7376219233930549
8033.5575123830495,0.9332604888222655
9736.083104017613,0.9747892736731666
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">4628.506329113924,0.0
6331.031920748487,0.12155225811982719
8033.5575123830495,0.3475471499400027
9736.083104017613,0.44390453769235844
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">4628.506329113924,0.0
6331.031920748487,0.4
8033.5575123830495,0.7
9736.083104017613,0.8
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">7380.287248553027,0.0
7380.287248553027,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1702.5, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4629, 1.144e+04]
Mean estimate of displayed sample: 7380 ± 1670 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: mean_abs_error" yaxis="count">
					<series title="count" type="b(1702.525592)" color="0x0000ff" encoding="csv">4628.506329113924,4.0
6331.031920748487,3.0
8033.5575123830495,1.0
9736.083104017613,2.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">7380.287248553027,0.0
7380.287248553027,4.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1702.5, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4629, 1.144e+04]
Mean estimate of displayed sample: 7380 ± 1670 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:mean_squared_error)</formula>
			<comment>Mean Squared Error</comment>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:mean_relative_error)</formula>
			<comment>Mean Relative Error</comment>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:worst_case_error)</formula>
			<comment/>
			<result outcome="success" type="quantity" value="48597.6 ± 4074.27 (95% CI)" timestamp="2024-03-07 14:38:19 +0100">
				<details>48597.6 ± 4074.27 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: worst_case_error" yaxis="probability density">
					<series title="density" type="b(4343.000000)" color="0x0000ff" encoding="csv">38318.0,4.605111673958094E-5
42661.0,2.302555836979047E-5
47004.0,6.90766751093714E-5
51347.0,6.90766751093714E-5
55690.0,2.302555836979047E-5
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">48597.6,0.0
48597.6,6.90766751093714E-5
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=4343, bucket count=5
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [3.832e+04, 5.569e+04]
Mean estimate of displayed sample: 4.86e+04 ± 4074 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: worst_case_error" yaxis="probability">
					<series title="probability" type="b(4343.000000)" color="0x0000ff" encoding="csv">38318.0,0.2
42661.0,0.1
47004.0,0.3
51347.0,0.3
55690.0,0.1
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">48597.6,0.0
48597.6,0.3
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=4343, bucket count=5
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [3.832e+04, 5.569e+04]
Mean estimate of displayed sample: 4.86e+04 ± 4074 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: worst_case_error" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">38318.0,0.0
42661.0,0.2
47004.0,0.3
51347.0,0.6
55690.0,0.9
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">48597.6,0.0
48597.6,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=4343, bucket count=5
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [3.832e+04, 5.569e+04]
Mean estimate of displayed sample: 4.86e+04 ± 4074 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: worst_case_error" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">38318.0,0.30849710781876083
42661.0,0.5560954623076415
47004.0,0.6524528500599973
51347.0,0.8784477418801728
55690.0,0.9974714214555382
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">38318.0,0.0
42661.0,0.025210726326833372
47004.0,0.06673951117773447
51347.0,0.26237807660694507
55690.0,0.5549838829718046
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">38318.0,0.0
42661.0,0.2
47004.0,0.3
51347.0,0.6
55690.0,0.9
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">48597.6,0.0
48597.6,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=4343, bucket count=5
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [3.832e+04, 5.569e+04]
Mean estimate of displayed sample: 4.86e+04 ± 4074 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: worst_case_error" yaxis="count">
					<series title="count" type="b(4343.000000)" color="0x0000ff" encoding="csv">38318.0,2.0
42661.0,1.0
47004.0,3.0
51347.0,3.0
55690.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">48597.6,0.0
48597.6,3.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=4343, bucket count=5
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [3.832e+04, 5.569e+04]
Mean estimate of displayed sample: 4.86e+04 ± 4074 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:worst_case_relative_error)</formula>
			<comment/>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (max:hamming_distance)</formula>
			<comment/>
			<result outcome="success" type="quantity" value="11.5 ± 0.607936 (95% CI)" timestamp="2024-03-07 14:23:54 +0100">
				<details>11.5 ± 0.607936 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: hamming_distance" yaxis="probability density">
					<series title="density" type="b(1.000000)" color="0x0000ff" encoding="csv">10.0,0.1
11.0,0.4
12.0,0.4
13.0,0.1
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.5,0.0
11.5,0.4
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 13]
Mean estimate of displayed sample: 11.5 ± 0.6079 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: hamming_distance" yaxis="probability">
					<series title="probability" type="b(1.000000)" color="0x0000ff" encoding="csv">10.0,0.1
11.0,0.4
12.0,0.4
13.0,0.1
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.5,0.0
11.5,0.4
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 13]
Mean estimate of displayed sample: 11.5 ± 0.6079 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: hamming_distance" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">10.0,0.0
11.0,0.1
12.0,0.5
13.0,0.9
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.5,0.0
11.5,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 13]
Mean estimate of displayed sample: 11.5 ± 0.6079 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: hamming_distance" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">10.0,0.30849710781876083
11.0,0.44501611702819543
12.0,0.8129139715526015
13.0,0.9974714214555382
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">10.0,0.0
11.0,0.0025285785444617848
12.0,0.18708602844739852
13.0,0.5549838829718046
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">10.0,0.0
11.0,0.1
12.0,0.5
13.0,0.9
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.5,0.0
11.5,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 13]
Mean estimate of displayed sample: 11.5 ± 0.6079 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: hamming_distance" yaxis="count">
					<series title="count" type="b(1.000000)" color="0x0000ff" encoding="csv">10.0,1.0
11.0,4.0
12.0,4.0
13.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.5,0.0
11.5,4.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=4
Runs: 10 in total, 10 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 13]
Mean estimate of displayed sample: 11.5 ± 0.6079 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>E[&lt;=5000; 10] (min:hamming_distance)</formula>
			<comment/>
		</query>
	</queries>
</nta>
